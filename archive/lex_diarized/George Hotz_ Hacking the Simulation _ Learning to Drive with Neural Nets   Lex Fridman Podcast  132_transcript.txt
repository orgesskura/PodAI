Speaker 0: The following is a conversation with George Hotz, a.k.a.  GeoHot, his second time on the podcast.  He's the founder of Kama AI, an autonomous and semi-autonomous vehicle technology company that seeks to be, to Tesla Autopilot, what Android is to the iOS.  They sell the Comma II device for one thousand dollars that when installed in many of their supported cars can keep the vehicle centered in the lane even when there are no lane markings.  It includes driver sensing that ensures that the driver's eyes are on the road.  As you may know, I'm a big fan of driver sensing.  I do believe Tesla Autopilot and others should definitely include it in their sensor suite.  Also, I'm a fan of Android and a big fan of George for many reasons, including his nonlinear out of the box brilliance and the fact that he's a superstar programmer of a very different style than myself.  Styles make fights and styles make conversations.  So I really enjoyed this chat and I'm sure we'll talk many more times on this podcast.  Quick mention of each sponsor followed by some thoughts related to the episode.  First is Four Sigmatic, the maker of delicious mushroom coffee.  Second is Decoding Digital, a podcast on tech and entrepreneurship that I listen to and enjoy.  And finally, ExpressVPN, the VPN I've used for many years to protect my privacy on the internet.  Please check out the sponsors in the description to get a discount and to support this podcast.  As a side note, let me say that my work at MIT on autonomous and semi-autonomous vehicles led me to study the human side of autonomy enough to understand that it's a beautifully complicated and interesting problem space, much richer than what can be studied in the lab.  In that sense, the data that Comma AI, Tesla Autopilot, and perhaps others like Cadillac Super Cruiser are collecting gives us a chance to understand how we can design safe semi-autonomous vehicles for real human beings in real world conditions.  I think this requires bold innovation and a serious exploration of the first principles of the driving task itself.  If you enjoy this thing, subscribe on YouTube, review it with Five Stars on Apple Podcasts, follow on Spotify, support on Patreon, or connect with me on Twitter at Lex Friedman.  And now, here's my conversation with George Hotz.  So last time we started talking about the simulation.  This time, let me ask you, do you think there's intelligent life out there in the universe?  

Speaker 1: I've always maintained my answer to the Fermi paradox.  I think there has been intelligent life elsewhere in the universe.  

Speaker 0: So intelligent civilizations existed, but they've blown themselves up.  So your general intuition is that intelligent civilizations quickly, like there's that parameter in the Drake equation.  Your sense is they don't last very long.  How are we doing on that?  Like, have we lasted pretty good?  Are we due?  

Speaker 1: Oh, yeah.  I mean, not quite yet.  Well, wait, it's Elias Yudkowsky.  The IQ required to destroy the world falls by one point every year?  

Speaker 0: Okay, so technology democratizes the destruction of the world.  

Speaker 1: When can a meme destroy the world?  

Speaker 0: It kind of is already, right?  

Speaker 1: Somewhat.  I don't think we've seen anywhere near the worst of it yet.  The world's going to get weird.  

Speaker 0: Well, maybe a meme can save the world.  Have you thought about that?  The meme lord, Elon Musk, fighting on the side of good versus the meme lord of the darkness, which is not saying anything bad about Donald Trump, but he is the lord of the meme on the dark side.  He's a Darth Vader of memes.  

Speaker 1: I think in every fairy tale, they always end it with, and they lived happily ever after.  And I'm like, please tell me more about this.  happily ever after.  I've heard of marriages end in divorce.  Why doesn't your marriage end up there?  You can't just say happily ever after.  The thing about destruction is it's over after the destruction.  We have to do everything right in order to avoid it.  And one thing wrong—I mean, actually, this is what I really like about cryptography.  Cryptography, it seems like we live in a world where the defense wins.  versus like nuclear weapons, the opposite is true.  It is much easier to build a warhead that splits into a hundred little warheads than to build something that can, you know, take out a hundred little warheads.  The offense has the advantage there.  So maybe our future is in crypto, but...  

Speaker 0: So cryptography, right.  The Goliath is the defense.  And then all the different hackers are the Davids.  And that equation is flipped for nuclear war.  Because there's so many, like one nuclear weapon destroys everything, essentially.  

Speaker 1: Yeah, and it is much easier to attack with a nuclear weapon than it is to like, the technology required to intercept and destroy a rocket is much more complicated than the technology required to just, you know, orbital trajectory, send a rocket to somebody.  

Speaker 0: So, okay, your intuition that there were intelligent civilizations out there, but it's very possible that they're no longer there.  It's kind of a sad picture.  

Speaker 1: They enter some steady state.  They all wirehead themselves.  

Speaker 0: What's wirehead?  

Speaker 1: Stimulate their pleasure centers.  And just, you know, live forever in this kind of stasis.  They become, well, I mean, I think the reason I believe this is because where are they?  if there's some reason they stopped expanding, because otherwise they would have taken over the universe.  The universe isn't that big, or at least, you know, let's just talk about the galaxy, right?  It's seventy thousand light years across.  I took that number from Star Trek Voyager.  I don't know how true it is, but yeah, that's not big, right?  Seventy thousand light years is nothing.  

Speaker 0: for some possible technology that you can imagine that can leverage like wormholes or something like that.  

Speaker 1: Or you don't even need wormholes.  Just a von Neumann probe is enough.  A von Neumann probe and a million years of sublight travel and you'd have taken over the whole universe.  That clearly didn't happen.  So something stopped it.  

Speaker 0: So you mean if you, right, for like a few million years, if you sent out probes that travel close, what's sublight?  You mean close to the speed of light?  

Speaker 1: Let's say point one C.  

Speaker 0: And it just spreads.  Interesting.  Actually, that's an interesting calculation.  So what makes you think that we'd be able to communicate with them?  Why do you think we would be able to comprehend intelligent lives that are out there?  Even if they were among us, kind of thing.  Or even just flying around.  

Speaker 1: Well, I mean, it's possible that there is some sort of prime directive.  That'd be a really cool universe to live in.  And there's some reason they're not making themselves visible to us.  But it makes sense that they would use the same, well, at least the same entropy.  

Speaker 0: Well, you're implying the same laws of physics.  I don't know what you mean by entropy in this case.  

Speaker 1: Oh, yeah.  I mean, if entropy is the scarce resource in the universe.  

Speaker 0: So what do you think about like Stephen Wolfram and everything is a computation?  And then what if they are traveling through this world of computation?  So if you think of the universe as just information processing, than what you're referring to with entropy.  And then these pockets of interesting complex computations swimming around.  How do we know they're not already here?  How do we know that this, like all the different amazing things that are full of mystery on earth are just like little footprints of intelligence from light years away?  

Speaker 1: Maybe, I mean, I tend to think that as civilizations expand, they use more and more energy and you can never overcome the problem of waste heat.  So where is their waste heat?  

Speaker 0: So we'd be able to, with our crude methods, be able to see like there's a whole lot of energy here, but it could be something we're not, I mean, we don't understand dark energy, right, dark matter.  It could be just stuff we don't understand at all.  Or they could have a fundamentally different physics, you know, like that we just don't even comprehend.  

Speaker 1: Well, I think, okay, I mean, it depends how far out you want to go.  I don't think physics is very different on the other side of the galaxy.  I would suspect that they have, I mean, if they're in our universe, they have the same physics.  

Speaker 0: Well yeah, that's the assumption we have, but there could be super trippy things like our cognition only gets to a slice, and all the possible instruments that we can design only get to a particular slice of the universe, and there's something much weirder.  

Speaker 1: Maybe we can try a thought experiment.  Would people from the past be able to detect the remnants of our, would we be able to detect our modern civilization?  And I think the answer is obviously yes.  

Speaker 0: You mean past from a hundred years ago?  

Speaker 1: Well, let's even go back further.  Let's go to a million years ago.  The humans who were lying around in the desert probably didn't even have, maybe they just barely had fire.  They would understand if a seven-forty-seven flew overhead.  

Speaker 0: Oh, in this vicinity, but not if a Seven-Forty-Seven flew on Mars, because they wouldn't be able to see far.  Because we're not actually communicating that well with the rest of the universe.  We're doing OK, just sending out random, like, fifties tracks of music.  

Speaker 1: True.  And yeah, I mean, they'd have to, you know, we've only been broadcasting radio waves for a hundred fifty years.  And well, there's your light cone.  So.  

Speaker 0: Yeah, okay.  What do you make about all the... I recently came across this, having talked to David Fravor.  I don't know if you caught what the videos that Pentagon released and the New York Times reporting of the UFO sightings.  So I kind of looked into it, quote unquote, and there's actually been like hundreds of thousands of UFO sightings, right?  And a lot of it, you can explain away in different kinds of ways.  So one is it could be interesting physical phenomena.  Two, it could be people wanting to believe, and therefore they conjure up a lot of different things.  that just, you know, when you see different kinds of lights, some basic physics phenomena, and then you just conjure up ideas of possible out there mysterious worlds.  But it's also possible, like you have a case of David Fravor, who is a Navy pilot who's as legit as it gets in terms of humans who are able to perceive things in the environment and make conclusions whether those things are a threat or not.  And he and several other pilots saw a thing, I don't know if you followed this, but they saw a thing that they've since then called TikTok that moved in all kinds of weird ways.  They don't know what it is.  It could be technology developed by the United States and they're just not aware of it on the surface level from the Navy, right?  It could be different kind of lighting technology or drone technology, all that kind of stuff.  It could be the Russians and the Chinese, all that kind of stuff.  And of course their mind, our mind, can also venture into the possibility that it's from another world.  Have you looked into this at all?  What do you think about it?  

Speaker 1: I think all the news is a psyop.  I think that the most plausible- Nothing is real.  Yeah.  I listened to the, I think it was Bob Lazar on Joe Rogan.  And I believe everything this guy is saying.  And then I think that it's probably just some MKUltra kind of thing.  

Speaker 0: What do you mean?  

Speaker 1: They made some weird thing and they called it an alien spaceship.  Maybe it was just to stimulate young physicists' minds.  We'll tell them it's alien technology and we'll see what they come up with.  

Speaker 0: Do you find any conspiracy theories compelling?  Have you pulled at the string of the rich, complex world of conspiracy theories that's out there?  

Speaker 1: I've heard a conspiracy theory that conspiracy theories were invented by the CIA in the sixties to discredit true things.  So you can go to ridiculous conspiracy theories like Flat Earth and Pizzagate and you You know, these things are almost to hide like conspiracy theories that like, you know, remember when the Chinese like locked up the doctors who discovered coronavirus?  Like I tell people this and I'm like, no, no, no, that's not a conspiracy theory.  That actually happened.  Do you remember the time that the money used to be backed by gold and now it's backed by nothing?  This is not a conspiracy theory.  This actually happened.  

Speaker 0: Well, that's one of my worries today with the idea of fake news is that When nothing is real, then like you dilute the possibility of anything being true by conjuring up all kinds of conspiracy theories.  And then you don't know what to believe.  And then like the idea of truth, of objectivity is lost completely.  Everybody has their own truth.  

Speaker 1: So you used to control information by censoring it.  And then the internet happened and governments are like, oh shit, we can't censor things anymore.  I know what we'll do.  You know, it's the old story of tying a flag where the leprechaun tells you his gold is buried.  And you tie one flag and you make the leprechaun swear to not remove the flag.  And you come back to the field later with a shovel and there's flags everywhere.  

Speaker 0: That's one way to maintain privacy, right?  In order to protect the contents of this conversation, for example, we could just generate millions of deep fake conversations where you and I talk and say random things.  So this is just one of them and nobody knows which one is the real one.  This could be fake right now.  

Speaker 1: Classic steganography technique.  

Speaker 0: Okay, another absurd question about intelligent life, because you're an incredible programmer, outside of everything else we'll talk about, just as a programmer.  Do you think intelligent beings out there, the civilizations that were out there, had computers and programming?  Do we naturally have to develop something where we engineer machines and are able to encode both knowledge into those machines and instructions that process that knowledge, process that information to make decisions and actions and so on.  And would those programming languages, if you think they exist, be at all similar to anything we've developed?  

Speaker 1: So I don't see that much of a difference between quote unquote natural languages and programming languages.  Hmm.  I think there's so many similarities.  So when asked the question, what do alien languages look like?  I imagine they're not all that dissimilar from ours.  And I think translating in and out of them wouldn't be that crazy.  

Speaker 0: Well, it's difficult to compile like DNA to Python and then to C. There is a little bit of a gap in the kind of languages we use for Turing machines and the kind of languages nature seems to use a little bit.  Maybe that's just, we just haven't, we haven't understood the kind of language that nature uses well yet.  

Speaker 1: DNA is a CAD model.  not quite a programming language.  It has no sort of serial execution.  It's not quite a... yeah, it's a CAD model.  So I think, in that sense, we actually completely understand it.  The problem is, you know, well, simulating on these CAD models.  I played with it a bit this year.  It is super computationally intensive if you want to go down to, like, the molecular level where you need to go to see a lot of these phenomenon, like protein folding.  So Yeah, it's not that we don't understand it.  It just requires a whole lot of compute to kind of compile it.  

Speaker 0: For our human minds, it's inefficient both for the data representation and for the programming.  

Speaker 1: Yeah, it runs well on raw nature.  It runs well on raw nature.  And when we try to build emulators or simulators for that, well, they're mad slow.  And I've tried it.  

Speaker 0: It runs in, yeah, you've commented elsewhere, I don't remember where, that one of the problems of simulating nature is tough.  And if you want to sort of deploy a prototype, I forgot how you put it, but it made me laugh, but animals or humans would need to be involved.  in order to try to run some prototype code on, like if we're talking about COVID and viruses and so on, if you were trying to engineer some kind of defense mechanisms, like a vaccine against COVID or all that kind of stuff, doing any kind of experimentation like you can with autonomous vehicles would be very technically and ethically costly.  

Speaker 1: I'm not sure about that.  I think you can do tons of crazy biology in test tubes.  I think my bigger complaint is more, all the tools are so bad.  

Speaker 0: Literally?  You mean like libraries?  

Speaker 1: I'm not pipetting shit.  No, there has to be some.  

Speaker 0: like automating stuff and like the, yeah, but human biology is messy.  

Speaker 1: Like it seems like, look at those Toronto's videos.  They were a joke.  It's like, It's like a little gantry.  It's like a little XY gantry high school science project with the pipette.  I'm like, really?  

Speaker 0: It's gotta be something better.  

Speaker 1: You can't build like nice microfluidics and I can program the, you know, computation to bio interface.  I mean, this is gonna happen.  But like right now, if you are asking me to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette  

Speaker 0: to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette to pipette.  This is so crude.  Yeah.  OK, let's get all the crazy out of the way.  So a bunch of people asked me, since we talked about the simulation last time, we talked about hacking the simulation.  Do you have any updates, any insights about how we might be able to go about hacking simulation if we indeed do live in a simulation?  

Speaker 1: I think a lot of people misinterpreted the point of that South by talk.  The point of the South by Talk was not literally to hack the simulation.  I think that this is an idea is literally just, I think, theoretical physics.  I think that's the whole goal, right?  You want your grand unified theory, but then, okay, build a grand unified theory, search for exploits, right?  I think we're nowhere near actually there yet, My hope with that was just more to like, are you people kidding me with the things you spend time thinking about?  Do you understand kind of how small you are?  You are bytes and God's computer, really?  And the things that people get worked up about.  

Speaker 0: So basically, it was more a message of we should humble ourselves, that we get to Like what are we humans in this bytecode?  

Speaker 1: Yeah, and not just humble ourselves, but like.  I'm not trying to make people guilty or anything like that.  I'm trying to say like literally, look at what you are spending time on, right?  

Speaker 0: What are you referring to?  You're referring to the Kardashians?  What are we talking about?  

Speaker 1: I'm referring to, no, the Kardashians, everyone knows that's kind of fun.  I'm referring more to like the economy.  You know, this idea that We gotta up our stock price.  Or what is the goal function of humanity?  

Speaker 0: You don't like the game of capitalism?  Like you don't like the games we've constructed for ourselves as humans?  

Speaker 1: I'm a big fan of capitalism.  I don't think that's really the game we're playing right now.  I think we're playing a different game where the rules are rigged.  

Speaker 0: OK, which games are interesting to you that we humans have constructed and which aren't?  Which are productive and which are not?  

Speaker 1: Actually, maybe that's the real point of the talk.  Stop playing these fake human games.  There's a real game here.  We can play the real game.  The real game is, you know, nature wrote the rules.  This is a real game.  There still is a game to play.  

Speaker 0: But if you look at, sorry to interrupt, but I don't know if you've seen the Instagram account, NatureIsMetal, the game that nature seems to be playing is a lot more cruel than we humans want to put up with.  Or at least we see it as cruel.  It's like the bigger thing eats the smaller thing and does it to impress another big thing so it can mate with that thing.  And that's it.  That seems to be the entirety of it.  There's no art, there's no music, there's no comma AI, there's no comma one, no comma two, no George Hotz with his brilliant talks at South by Southwest.  

Speaker 1: I disagree though.  I disagree that this is what nature is.  I think nature just provided basically a open world MMORPG.  You know, here it's open world.  I mean, if that's the game you want to play, you can play that game.  

Speaker 0: But isn't that?  isn't that beautiful?  I know if you play Diablo, they used to have, I think, cow level where it's so everybody will go.  Just they figured out this.  like the best way to gain like experience points is to just slaughter cows over and over and over.  And so they figured out this little sub game within the bigger game that this is the most efficient way to get experience points.  and everybody somehow agreed that getting experience points in RPG context, where you always want to be getting more stuff, more skills, more levels, keep advancing, that seems to be good.  So might as well spend, sacrifice actual enjoyment of playing a game, exploring the world and spending like hundreds of hours of your time in cow level.  I mean, the number of hours I spent in cow level, I'm not like the most impressive person because people have probably thousands of hours there, but it's ridiculous.  So that's a little absurd game that brought me joy in some weird dopamine drug kind of way.  So you don't like those games.  You don't think that's us humans failing the nature.  And that was the point of the talk.  So how do we hack it, then?  

Speaker 1: Well, I want to live forever.  

Speaker 0: Wait, what?  

Speaker 1: Well, I want to live forever.  

Speaker 0: That's the goal.  

Speaker 1: Well, that's a game against nature.  

Speaker 0: Yeah.  Immortality is the good objective function to you?  

Speaker 1: I mean, start there, and then you can do whatever else you want, because you've got a long time.  

Speaker 0: What if immortality makes the game just totally not fun?  I mean, why do you assume immortality is somehow a good objective function?  

Speaker 1: It's not immortality that I want.  A true immortality.  where I could not die, I would prefer what we have right now.  But I want to choose my own death, of course.  I don't want nature to decide when I die.  I'm going to win.  I'm going to beat you.  

Speaker 0: And then at some point, if you choose, commit suicide.  Yeah.  How long do you think you'd live?  

Speaker 1: Until I get bored.  

Speaker 0: See, I don't think people like brilliant people like you that really ponder living a long time are really considering how meaningless life becomes.  

Speaker 1: Well, I want to know everything, and then I'm ready to die.  

Speaker 0: But why do you want, isn't it possible that you want to know everything because it's finite?  Like the reason you want to know, quote unquote, everything is because you don't have enough time to know everything.  And once you have unlimited time, then you realize like, why do anything?  Like why learn anything?  

Speaker 1: I want to know everything and then I'm ready to die.  It's a terminal value.  It's not in service of anything else.  

Speaker 0: I'm conscious of the possibility, this is not a certainty, but the possibility of that engine of curiosity that you're speaking to is actually a symptom of the finiteness of life.  Without that finiteness, your curiosity would vanish, like a morning fog.  Pulkowski talked about love like that.  

Speaker 1: Then let me solve immortality, let me change the thing in my brain that reminds me of the fact that I'm immortal, tells me that life is finite shit.  Maybe I'll have it tell me that life ends next week.  I'm okay with some self-manipulation like that.  I'm okay with deceiving myself.  

Speaker 0: Oh, changing the code?  

Speaker 1: Yeah, if that's the problem, right?  If the problem is that I will no longer have that curiosity, I'd like to have backup copies of myself.  

Speaker 0: Revert, yeah.  

Speaker 1: well, which I check in with occasionally to make sure they're okay with the trajectory and they can kind of override it.  Maybe a nice, like, I think of like those wave nets, those like logarithmic go back to the copies.  

Speaker 0: But sometimes it's not reversible.  Like I've done this with video games.  Once you figure out the cheat code or like you look up how to cheat old school, like single player, it ruins the game for you.  Absolutely.  

Speaker 1: I know that feeling.  But again, that just means our brain manipulation technology is not good enough yet.  Remove that cheat code from your brain.  Here you go.  

Speaker 0: So it's also possible that if we figure out immortality, that all of us will kill ourselves before we advance far enough to be able to revert the change.  

Speaker 1: I'm not killing myself till I know everything, so.  

Speaker 0: That's what you say now because your life is finite.  

Speaker 1: You know, I think, yeah, self-modifying systems comes up with all these hairy complexities.  And can I promise that I'll do it perfectly?  No, but I think I can put good safety structures in place.  

Speaker 0: So that talk in your thinking here is not literally referring to a simulation in that our universe is a kind of computer program running on a computer.  It's more of a thought experiment.  Do you also think of the potential of the sort of Bostrom, Elon Musk, and others that talk about an actual program that simulates our universe?  

Speaker 1: Oh, I don't doubt that we're in a simulation.  I just think that it's not quite that important.  I mean, I'm interested only in simulation theory as far as it gives me power over nature.  If it's totally unfalsifiable, then who cares?  

Speaker 0: I mean, what do you think that experiment would look like?  Somebody on Twitter asked, George, what signs we would look for to know whether or not we're in simulation, which is exactly what you're asking.  the step that precedes the step of knowing how to get more power from this knowledge is to get an indication that there's some power to be gained.  So get an indication that you can discover and exploit cracks in the simulation.  Or it doesn't have to be in the physics of the universe.  

Speaker 1: Yeah.  Show me.  I mean, like a memory leak could be cool.  Some scrying technology, you know?  

Speaker 0: What kind of technology?  

Speaker 1: Scrying.  

Speaker 0: What's that?  

Speaker 1: Oh, that's a weird, scrying is the paranormal ability to, like remote viewing, like being able to see somewhere where you're not.  So, you know, I don't think you can do it by chanting in a room, but if we could find, it's a memory leak, basically.  

Speaker 0: It's a memory leak.  Yeah, you're able to access parts you're not supposed to.  And thereby discover a shortcut.  

Speaker 1: Yeah, memory leak means the other thing as well, but I mean like, yeah, like an ability to read arbitrary memory.  And that one's not that horrifying.  The right ones start to be horrifying.  

Speaker 0: Read it, right.  So the reading is not the problem.  

Speaker 1: Yeah, it's like Heartbleed for the universe.  

Speaker 0: Oh boy, the writing is a big, big problem.  It's a big problem.  It's the moment you can write anything, even if it's just random noise.  That's terrifying.  

Speaker 1: I mean, even without that, even some of the nanotech stuff that's coming, I think is...  

Speaker 0: I don't know if you're paying attention, but actually Eric Weinstein came out with the theory of everything.  I mean, that came out.  He's been working on a theory of everything in the physics world called geometric unity.  And then for me, from a computer science person like you, Stephen Wolfram's theory of everything of like hypergraphs is super interesting and beautiful, but not from a physics perspective, but from a computational perspective.  I don't know.  Have you paid attention to any of that?  

Speaker 1: So again, what would make me pay attention and why I hate string theory is, okay, make a testable prediction.  I'm not interested in theories for their intrinsic beauty.  I'm interested in theories that give me power over the universe.  So if these theories do, I'm very interested.  

Speaker 0: Can I just say how beautiful that is?  Because a lot of physicists say, I'm interested in experimental validation, and they skip out the part where they say, to give me more power in the universe.  I just love the clarity of that.  

Speaker 1: I want a hundred gigahertz processors.  I want transistors that are smaller than atoms.  I want power.  

Speaker 0: That's true and that's where people, from aliens to this kind of technology, where people are worried that governments, like who owns that power?  Is it George Hartz?  Is it thousands of distributed hackers across the world.  Is it governments?  You know, is it Mark Zuckerberg?  There's a lot of people that I don't know if anyone trusts any one individual with power.  So they're always worried.  

Speaker 1: It's the beauty of blockchains.  

Speaker 0: That's the beauty of blockchains, which we'll talk about.  On Twitter, somebody pointed me to a story, a bunch of people pointed me to a story a few months ago where you went into a restaurant in New York, and you can correct me if this is wrong, and ran into a bunch of folks from a company, a crypto company, who are trying to scale up Ethereum.  and they had a technical deadline related to a solidity to OVM compiler.  So these are all Ethereum technologies.  So you stepped in, they recognized you, pulled you aside, explained their problem, and you stepped in and helped them solve the problem, thereby creating legend status story.  Can you tell me the story a little more detail?  It seems kind of incredible.  Did this happen?  

Speaker 1: Yeah, yeah, it's a true story.  It's a true story.  I mean, they wrote a very flattering account of it.  So, Optimism is the—the company's called Optimism.  It's a spin-off of Plasma.  They're trying to build L-II solutions on Ethereum.  So right now, Every Ethereum node has to run every transaction on the Ethereum network.  And this kind of doesn't scale, right?  Because if you have N computers, well, you know, if that becomes two N computers, you actually still get the same amount of compute.  Right?  This is like O of one scaling.  Because they all have to run it.  Okay, fine, you get more blockchain security, but like, the blockchain's already so secure.  Can we trade some of that off for speed?  So that's kind of what these L-two solutions are.  They built this thing which kind of sandbox for Ethereum contracts so they can run it in this L-two world and it can't do certain things in L-world, in L-one.  

Speaker 0: Can I ask you for some definitions?  What's L-two?  

Speaker 1: Oh, L-two is layer two.  So L-one is like the base Ethereum chain and then layer two is like a computational layer that runs elsewhere but still is kind of secured by layer one.  

Speaker 0: And I'm sure a lot of people know, but Ethereum is a cryptocurrency, probably one of the most popular cryptocurrencies, second to Bitcoin, and a lot of interesting technological innovations there.  Maybe you could also slip in whenever you talk about this, any things that are exciting to you in the Ethereum space.  And why Ethereum?  

Speaker 1: Well, I mean, Bitcoin is not Turing complete.  Ethereum is not technically Turing complete with the gas limit, but close enough.  

Speaker 0: Well, the gas limit.  What's the gas limit?  Resources?  

Speaker 1: Yeah.  I mean, no computer is actually term incomplete.  Right.  You're fine at RAM, you know?  I can actually solve the whole problem.  

Speaker 0: What's the word gas limit?  You have so many brilliant words.  I'm not even going to ask.  

Speaker 1: No, no, that's not my word.  That's Ethereum's word.  

Speaker 0: Gas limit.  

Speaker 1: Ethereum, you have to spend gas per instruction.  So like different opcodes use different amounts of gas.  And you buy gas with ether to prevent people from basically DDoSing the network.  

Speaker 0: So Bitcoin is proof of work.  And then what's Ethereum?  

Speaker 1: It's also proof of work.  They're working on some proof of stake.  Ethereum two point oh stuff.  But right now it's proof of work.  It uses a different hash function from Bitcoin.  that's more ASIC resistance because you need RAM.  

Speaker 0: So we're all talking about Ethereum.  one point oh.  So what were they trying to do to scale this whole process?  

Speaker 1: So they were like, well, if we could run contracts elsewhere and then only save the results of that computation.  Well, we don't actually have to do the compute on the chain.  We can do the compute off chain and just post what the results are.  Now, the problem with that is, well, somebody could lie about what the results are.  So you need a resolution mechanism.  And the resolution mechanism can be really expensive because you just have to make sure that the person who is saying, look, I swear that this is the real computation.  I'm staking ten thousand dollars on that fact.  And if you prove it wrong, yeah, it might cost you three thousand dollars in gas fees to prove wrong, but you'll get the ten thousand dollar bounty.  So you can secure using those kind of systems.  Um, so it's effectively a sandbox which runs contracts, uh, and like, just like any kind of normal sandbox, you have to like replace sys calls with, um, you know, calls into the hypervisor.  

Speaker 0: Sandbox, syscalls, hypervisor.  What do these things mean?  As long as it's interesting to talk about.  

Speaker 1: Yeah, I mean, you can take like the Chrome sandbox is maybe the one to think about, right?  So the Chrome process that's doing a rendering can't, for example, read a file from the file system.  It has, if it tries to make an open syscall in Linux, the open syscall, you can't make an open syscall, no, no, no.  You have to request from the kind of hypervisor process or like, I don't know what it's called in Chrome, but the, hey, could you open this file for me?  And then it does all these checks and then it passes the file handle back in if it's approved.  So that's, yeah.  

Speaker 0: So what's the, in the context of Ethereum, what are the boundaries of the sandbox that we're talking about?  

Speaker 1: Well, like one of the calls that you actually reading and writing any state to the Ethereum contract or to the Ethereum blockchain.  writing state is one of those calls that you're going to have to sandbox in layer two.  Because if you let layer two just arbitrarily write to the Ethereum blockchain...  

Speaker 0: So layer two is really sitting on top of layer one.  So you're going to have a lot of different kinds of ideas that you can play with.  Yeah.  And they're not fundamentally changing the source code level of Ethereum.  

Speaker 1: Well, you have to replace a bunch of calls with calls into the hypervisor.  So instead of doing the syscall directly, you replace it with a call to the hypervisor.  So originally, they were doing this by first running the, so Solidity is the language that most Ethereum contracts are written in.  It compiles to a bytecode.  And then they wrote this thing they called the transpiler.  And the transpiler took the bytecode and it transpiled it into OVM safe bytecode basically bytecode that didn't make any of those restricted sys calls and added the calls to the hypervisor.  this transpiler was a three thousand line mess and it's hard to do.  it's hard to do if you're trying to do it like that because you have to kind of like deconstruct the bytecode change things about it and then reconstruct it.  And, I mean, as soon as I hear this, I'm like, well, why don't you just change the compiler, right?  Why not the first place you build the bytecode, just do it in the compiler?  So, yeah, you know, I asked them how much they wanted it.  Of course, measured in dollars, and I'm like, well, okay.  

Speaker 0: And, yeah.  And you wrote the compiler.  

Speaker 1: Yeah, I modified, I wrote a three hundred line diff to the compiler.  It's open source, you can look at it.  

Speaker 0: Yeah, I looked at the code last night.  It's cute.  Yeah, exactly.  Cute is a good word for it.  And it's C++.  

Speaker 1: C++, yeah.  

Speaker 0: So when asked how you were able to do it, you said, you just got to think and then do it right.  So can you break that apart a little bit?  What's your process of, one, thinking, and two, doing it right?  

Speaker 1: You know, the people I was working for were amused that I said that.  It doesn't really mean anything.  

Speaker 0: OK.  I mean, is there some deep, profound insights to draw from, like, how you problem solve from that?  

Speaker 1: This is always what I say.  I'm like, do you want to be a good programmer?  Do it for twenty years.  

Speaker 0: Yeah, there's no shortcuts.  What are your thoughts on crypto in general?  So what parts, technically or philosophically, do you find especially beautiful, maybe?  

Speaker 1: Oh, I'm extremely bullish on crypto long term.  Not any specific crypto project, but this idea of Well, two ideas.  One, the Nakamoto consensus algorithm is, I think, one of the greatest innovations of the XXI century.  This idea that people can reach consensus, you can reach a group consensus using a relatively straightforward algorithm is wild.  And like, you know, Satoshi Nakamoto, people always ask me who I look up to.  It's like, whoever that is.  

Speaker 0: Who do you think it is?  Elon Musk?  Is it you?  

Speaker 1: It is definitely not me, and I do not think it's Elon Musk.  But yeah, this idea of groups reaching consensus in a decentralized yet formulaic way is one extremely powerful idea from crypto.  Maybe the second idea is this idea of smart contracts.  When you write a contract, between two parties, any contract.  This contract, if there are disputes, it's interpreted by lawyers.  Lawyers are just really shitty, overpaid interpreters.  Imagine you had, let's talk about them in terms of like, let's compare a lawyer to Python, right?  Well, okay.  That's brilliant.  

Speaker 0: I never thought of it that way.  It's hilarious.  

Speaker 1: So Python, I'm paying even ten cents an hour.  I'll use the nice Azure machine.  I can run Python for ten cents an hour.  Lawyers cost a thousand dollars an hour.  So Python is ten thousand X better on that axis.  Lawyers don't always return the same answer.  Python almost always does.  

Speaker 0: Cost.  

Speaker 1: Yeah, I mean, just cost, reliability, everything about Python is so much better than lawyers.  So if you can make smart contracts, this whole concept of code is law.  I love and I would love to live in a world where everybody accepted that fact.  

Speaker 0: So maybe you can talk about what smart contracts are.  

Speaker 1: So let's say, let's say, you know, we have a Even something as simple as a safety deposit box, right?  A safety deposit box that holds a million dollars.  I have a contract with a bank that says two out of these three parties must be present to open the safety deposit box and get the money out.  So that's a contract with a bank, and it's only as good as the bank and the lawyers, right?  Let's say, you know, somebody dies, and now, oh, we're going to go through a big legal dispute about whether, oh, well, was it in the will?  Was it not in the will?  Like, it's just so messy, and the cost to determine truth is so expensive.  Versus a smart contract, which just uses cryptography to check if two out of three keys are present.  Well, I can look at that and I can have certainty in the answer that it's going to return.  And that's what all businesses want is certainty.  You know, they say businesses don't care.  Viacom YouTube.  YouTube's like, look, we don't care which way this lawsuit goes.  Just please tell us so we can have certainty.  

Speaker 0: Yeah, I wonder how many agreements in this world, because we're talking about financial transactions only in this case, correct?  The smart contracts.  

Speaker 1: Oh, you can go to anything.  You can put a prenup in the Ethereum blockchain.  

Speaker 0: A married smart contract?  

Speaker 1: Sorry, divorce lawyer.  Sorry, you're going to be replaced by Python.  

Speaker 0: OK, so that's... So that's another beautiful idea.  Do you think there's something that's appealing to you about any one specific implementation?  So if you look ten, twenty, fifty years down the line, do you see any Bitcoin, Ethereum, any of the other hundreds of cryptocurrencies winning out?  What's your intuition about the space?  Are you just sitting back and watching the chaos and look who cares what emerges?  

Speaker 1: Oh, I don't.  I don't speculate.  I don't really care.  I don't really care which one of these projects wins.  I'm kind of in the Bitcoin as a meme coin camp.  I mean, why does Bitcoin have value?  It's technically kind of, you know, not great.  Like the block size debate.  When I found out what the block size debate was, I'm like, are you guys kidding?  

Speaker 0: What's the block size debate?  

Speaker 1: You know what?  It's really, it's too stupid to even talk.  People can look it up, but I'm like, wow.  You know, Ethereum seems, the governance of Ethereum seems much better.  I've come around a bit on proof of stake ideas.  You know, very smart people thinking about some things.  

Speaker 0: Yeah.  You know, governance is interesting.  It does feel like Vitalik, like it does feel like an open, even in these distributed systems, leaders are helpful.  because they kind of help you drive the mission and the vision, and they put a face to a project.  It's a weird thing about us humans.  

Speaker 1: Geniuses are helpful, like Vitalik.  Right.  

Speaker 0: Yeah, brilliant.  

Speaker 1: Leaders, I mean.  

Speaker 0: Are not necessarily, yeah.  So you think the reason he's the face of a theorem is because he's a genius.  That's interesting.  I mean, that was, It's interesting to think about that.  we need to create systems in which the quote unquote leaders that emerge are the geniuses in the system.  I mean, that's arguably why the current state of democracy is broken is the people who are emerging as the leaders are not the most competent, are not the superstars of the system.  And it seems like at least for now in the crypto world, oftentimes the leaders are the superstars.  

Speaker 1: Imagine at the debate, they asked, what's the Sixth Amendment?  What are the four fundamental forces in the universe?  What's the integral of two to the x?  I'd love to see those questions asked.  And that's what I want as our leader.  

Speaker 0: What's Bayes' rule?  Yeah, I mean, even, oh wow, you're hurting my brain.  My standard was even lower, but I would have loved to see just this basic brilliance.  Like I've talked to historians.  There's just these, they're not even like, they don't have a PhD or even education history.  They just like a Dan Carlin type character who just like, Holy shit, how did all this information get into your head?  They're able to just connect Genghis Khan to the entirety of the history of the XXth century.  They know everything about every single battle that happened.  And they know the... the Game of Thrones, of the different power plays and all that happened there.  And they know the individuals and all the documents involved.  And they integrate that into their regular life.  It's not like they're ultra history nerds.  They know this information.  That's what competence looks like.  

Speaker 1: Yeah.  

Speaker 0: Cause I've seen that with programmers too, right?  That's what great programmers do.  But yeah, it would be, it's really unfortunate that those kinds of people aren't emerging as our leaders.  But for now, at least in the crypto world, that seems to be the case.  I don't know if that always, you could imagine that in a hundred years, it's not the case, right?  

Speaker 1: Crypto world has one very powerful idea going for it.  And that's the idea of forks, right?  I mean, you know, Imagine, we'll use a less controversial example.  This was actually in my joke app in twenty twelve.  I was like, Barack Obama, Mitt Romney, let's let them both be president.  Imagine we could fork America and just let them both be president and then the Americas could compete and people could invest in one, pull their liquidity out of one, put it in the other.  You have this in the crypto world.  Ethereum forks into Ethereum and Ethereum classic.  and you can pull your liquidity out of one and put it in another, and people vote with their dollars, which forks companies should be able to fork.  I'd love to fork Nvidia, you know?  

Speaker 0: Yeah, like different business strategies, and then try them out and see what works.  Like even take, Yeah, take com.ai that closes its source and then take one that's open source and see what works.  Take one that's purchased by GM and one that remains Android Renegade and all these different versions and see.  

Speaker 1: The beauty of com.ai is someone can actually do that.  Please take com.ai and fork it.  

Speaker 0: That's right.  That's the beauty of open source.  We'll talk about autonomous vehicle space, but it does seem that you're really knowledgeable about a lot of different topics.  So the natural question, a bunch of people ask this, which is, how do you keep learning new things?  Do you have like practical advice?  If you were to introspect, like taking notes, allocate time, or do you just mess around and just allow your curiosity to drive?  

Speaker 1: I'll write these people a self-help book and I'll charge sixty-seven dollars for it.  

Speaker 0: What's chapter one?  

Speaker 1: I will write on the cover of the self-help book, all of this advice is completely meaningless.  You're gonna be a sucker and buy this book anyway.  And the one lesson that I hope they take away from the book is that I can't give you a meaningful answer to that.  

Speaker 0: That's interesting.  Let me translate that.  Is you haven't really thought about what it is you do.  systematically because you could reduce it.  And there's some people, I mean, I've met brilliant people that, I mean, this is really clear with athletes.  Some are just, you know, the best in the world at something.  And they have zero interest in writing like a self-help book or how to master this game.  And then there's some athletes who, become great coaches and they love the analysis, perhaps the over analysis.  And you right now, at least at your age, which is an interesting, you're in the middle of the battle.  You're like the warriors that have zero interest in writing books.  So you're in the middle of the battle.  So you have, yeah.  

Speaker 1: This is a fair point.  I do think I have a certain aversion to this kind of deliberate, intentional way of living life.  

Speaker 0: You eventually, the hilarity of this, especially since this is recorded, it will reveal beautifully the absurdity when you finally do publish this book.  I guarantee you, you will.  The story of comma AI, maybe it'll be a biography written about you.  That'll be better, I guess.  

Speaker 1: And you might be able to learn some cute lessons if you're starting a company like comma AI from that book.  But if you're asking generic questions like, how do I be good at things?  

Speaker 0: Well, I mean, the interesting thing.  Do them a lot.  Do them a lot.  But the interesting thing here is learning things outside of your current trajectory, which is what it feels like from an outsider's perspective.  I mean, I don't know if there's advice on that, but it is an interesting curiosity.  When you become really busy, you're running a company.  Hard time.  Yeah, but like there's a natural inclination and trend, like just the momentum of life carries you into a particular direction of wanting to focus.  And this kind of dispersion that curiosity can lead to gets harder and harder.  with time, because you get really good at certain things, and it sucks trying things that you're not good at, like trying to figure them out.  You do this with your life streams.  You're on the fly figuring stuff out.  You don't mind looking dumb.  You just figure it out pretty quickly.  

Speaker 1: Sometimes I try things and I don't figure them out.  My chess rating is like a fourteen hundred, despite putting like a couple hundred hours in.  It's pathetic.  I mean, to be fair, I know that I could do it better if I did it better.  Like, don't play, you know, don't play five minute games, play fifteen minute games at least.  Like, I know these things, but it just doesn't.  it doesn't stick nicely in my knowledge stream.  

Speaker 0: All right, let's talk about CommAI.  What's the mission of the company?  Let's like look at the biggest picture.  

Speaker 1: Oh, I have an exact statement.  solve self-driving cars while delivering shippable intermediaries.  I think it doesn't really speak to money, but I can talk about what solve self-driving cars means.  Solve self-driving cars, of course, means you're not building a new car, you're building a person replacement.  That person can sit in the driver's seat and drive you anywhere.  a person can drive with a human or better level of safety, speed, quality, comfort.  

Speaker 0: And what's the second part of that?  

Speaker 1: Delivering shippable intermediaries is, well, it's a way to fund the company, that's true, but it's also a way to keep us honest.  If you don't have that, it is very easy with this technology to think you're making progress when you're not.  I've heard it best described on Hacker News as you can set any arbitrary milestone, meet that milestone, and still be infinitely far away from solving self-driving cars.  

Speaker 0: So it's hard to have like real deadlines when you're like Cruz or Waymo when you don't have revenue.  Is that, I mean, is revenue essentially the thing we're talking about here?  

Speaker 1: Revenue is—capitalism is based around consent.  Capitalism—the way that you get revenue is—real capitalism, commas in the real capitalism camp.  There's definitely scams out there, but real capitalism is based around consent.  It's based around this idea that if we're getting revenue, it's because we're providing at least that much value to another person.  When someone buys a thousand dollar comma two from us, we're providing them at least a thousand dollars of value or they wouldn't buy it.  

Speaker 0: Brilliant.  So can you give a whirlwind overview of the products that Kama AI provides throughout its history and today?  

Speaker 1: I mean, yeah, the past ones aren't really that interesting.  It's kind of just been refinement of the same idea.  The real only product we sell today is the Kama II.  

Speaker 0: Which is a piece of hardware with cameras.  

Speaker 1: So the Comet-II, I mean, you can think about it kind of like a person, you know, and future hardware will probably be even more and more person-like.  So it has, you know, eyes, ears, a mouth, a brain, and a way to interface with the car.  

Speaker 0: Does it have consciousness?  Just kidding, that was a trick question.  

Speaker 1: I don't have consciousness either.  Me and the commentator are the same.  

Speaker 0: You're the same?  

Speaker 1: I have a little more compute than it.  It only has the same compute as a bee.  

Speaker 0: You're more efficient energy-wise for the compute you're doing.  

Speaker 1: Far more efficient energy-wise.  Twenty petaflops, twenty watts, crazy.  

Speaker 0: Do you lack consciousness?  Sure.  Do you fear death?  You do, you want immortality.  Of course I fear death.  Does Kami-I fear death?  I don't think so.  

Speaker 1: Of course it does.  It very much fears, well, it fears negative loss.  Oh yeah.  

Speaker 0: Okay, so Kama, so Kama two, when did that come out?  That was a year ago?  No, two?  

Speaker 1: Early this year.  

Speaker 0: Wow, time, it feels like, yeah.  Yeah.  Two, twenty, twenty feels like it's taken ten years to get to the end of it.  

Speaker 1: It's a long year.  

Speaker 0: It's a long year.  So, what, what's the sexiest thing about Kama two, feature wise?  So, I mean, maybe you can also linger on like, what is it?  Like, what's its purpose?  Because there's a hardware, there's a software component.  You've mentioned the sensors, but also like, what is it's features and capabilities?  

Speaker 1: I think our slogan summarizes it well.  Kama's slogan is, make driving chill.  

Speaker 0: I love it.  OK.  

Speaker 1: Yeah.  I mean, it is, you know, if you like cruise control, imagine cruise control, but much, much more.  

Speaker 0: So it can do adaptive cruise control things, which is like slow down for cars in front of it, maintain a certain speed.  And it can also do lane keeping, so staying in the lane and do it better and better and better over time.  It's very much machine learning based.  So there's cameras, there's a driver facing camera too.  What else is there?  What am I thinking?  So the hardware versus software.  So open pilot versus the actual hardware of the device.  Can you draw that distinction?  What's one, what's the other?  

Speaker 1: I mean, the hardware is pretty much a cell phone with a few additions.  A cell phone with a cooling system and with a car interface connected to it.  

Speaker 0: And by cell phone, you mean like Qualcomm Snapdragon?  

Speaker 1: Yeah, the current hardware is a Snapdragon at one.  It has a Wi-Fi radio.  It has an LTE radio.  It has a screen.  We use every part of the cell phone.  

Speaker 0: And then the interface with the car is specific to the car.  So you keep supporting more and more cars.  

Speaker 1: Yeah.  So the interface to the car, I mean, the device itself just has four CAN buses.  It has four CAN interfaces on it that are connected through the USB port to the phone.  And then, yeah, on those four CAN buses, you connect it to the car.  And there's a little harness to do this.  Cars are actually surprisingly similar.  

Speaker 0: So CAN is the protocol by which cars communicate, and then you're able to read stuff and write stuff to be able to control the car depending on the car.  So what's the software side?  What's OpenPilot?  

Speaker 1: So, I mean, OpenPilot is, the hardware is pretty simple compared to OpenPilot.  OpenPilot is... Well, so you have a machine learning model, which it's in OpenPilot.  It's a blob.  It's just a blob of weights.  It's not like people are like, oh, it's closed source.  I'm like, it's a blob of weights.  What do you expect?  

Speaker 0: So it's primarily neural network based.  

Speaker 1: Well, OpenPilot is all the software kind of around that neural network.  But if you have a neural network that says, here's where you want to send the car, OpenPilot actually goes and executes all of that.  

Speaker 0: It cleans up the input to the neural network.  It cleans up the output and executes on it.  So it connects.  It's the glue that connects everything together.  

Speaker 1: It runs the sensors, does a bunch of calibration for the neural network, deals with like, you know, if the car is on a banked road, you have to countersteer against that.  And the neural network can't necessarily know that by looking at the picture.  So you do that with other sensors and fusion and localizer.  OpenPilot also is responsible for sending the data up to our servers so we can learn from it, logging it, recording it, running the cameras, thermally managing the device, managing the disk space on the device, managing all the resources on the device.  

Speaker 0: So what, since we last spoke, I don't remember when, maybe a year ago, maybe a little bit longer, how has OpenPilot improved?  

Speaker 1: We did exactly what I promised you.  I promised you that by the end of the year, you'd be able to remove the lanes.  The lateral policy is now almost completely end-to-end.  You can turn the lanes off and it will drive slightly worse on the highway if you turn the lanes off, but you can turn the lanes off and it will drive well-trained, completely end-to-end on user data.  And this year we hope to do the same for the longitudinal policy.  

Speaker 0: So that's the interesting thing is you're not doing, you don't appear to be, maybe you can correct me, you don't appear to be doing lane detection or lane marking detection or kind of the segmentation task or any kind of object detection task.  You're doing what's traditionally more called like end-to-end learning.  So entrained on actual behavior of drivers when they're driving the car manually.  

Speaker 1: and this is hard to do.  It's not supervised learning.  

Speaker 0: Yeah.  So the nice thing is there's a lot of data, so it's hard and easy.  

Speaker 1: We have a lot of high-quality data.  

Speaker 0: More than you need in a sense.  

Speaker 1: We have way more data than we need.  

Speaker 0: I mean, it's an interesting question actually because in terms of amount, you have more than you need, but driving is full of edge cases.  So how do you select the data you train on?  I think this is an interesting open question.  What's the cleverest way to select data?  That's the question Tesla is probably working on.  I mean, the entirety of machine learning, they don't seem to really care.  They just kind of select data.  But I feel like that if you want to create intelligent systems, you have to pick data well.  And so do you have any hints, ideas of how to do it well?  

Speaker 1: So in some ways, that is the definition I like of reinforcement learning versus supervised learning.  In supervised learning, the weights depend on the data, right?  And this is obviously true, but in reinforcement learning, the data depends on the weights.  And actually, both ways.  

Speaker 0: That's poetry.  That's brilliant.  

Speaker 1: So how does it know what data to turn on?  Well, let it pick.  We're not there yet, but that's the eventual.  

Speaker 0: So you're thinking of this almost like a reinforcement learning framework.  

Speaker 1: We're going to do RL on the world.  Every time a car makes a mistake, user disengages, we train on that and do RL on the world.  Ship out a new model.  That's an epoch, right?  

Speaker 0: And for now, you're not doing the Elon-style promising that it's going to be fully autonomous.  You really are sticking to level two.  And it's supposed to be supervised.  

Speaker 1: Oh, it is definitely supposed to be supervised, and we enforce the fact that it's supervised.  We look at our rate of improvement in disengagements.  OpenPilot now has an unplanned disengagement about every hundred miles.  This is up from ten miles, like, maybe, maybe, uh... Maybe a year ago.  Yeah.  So maybe we've seen TenX improvement in a year, but a hundred miles is still a far cry from the hundred thousand you're going to need.  So you're going to somehow need to get, um, three more TenXs in there.  

Speaker 0: And what's your intuition?  You're basically hoping that there's exponential improvement baked into the cake somewhere?  

Speaker 1: Well, that's even... I mean, ten X improvement, that's already assuming exponential, right?  There's definitely exponential improvement.  And I think when Elon talks about exponential, these systems are going to exponentially improve.  Exponential doesn't mean you're getting hundred gigahertz processors tomorrow, right?  It's going to still take a while because the gap between even our best system and humans is still large.  

Speaker 0: So that's an interesting distinction to draw.  So if you look at the way Tesla's approaching the problem, and the way you're approaching the problem, which is very different than the rest of the self-driving car world, so let's put them aside, is you're treating most of the driving tasks as a machine learning problem.  And the way Tesla's approaching it is with a multi-task learning, where you break the task of driving into hundreds of different tasks, And you have this multi-headed neural network that's very good at performing each task.  And there's presumably something on top that's stitching stuff together in order to make control decisions, policy decisions about how you move the car.  But what that allows you, there's a brilliance to this because it allows you to master each task, like lane detection, stop sign detection, traffic light detection, drivable area segmentation, vehicle, bicycle, pedestrian detection.  There's some localization tasks in there, also predicting like predicting how the entities in the scene are going to move.  Like everything is basically a machine learning task, whether it's a classification, segmentation, prediction.  And it's nice because you can have this entire engine, data engine that's mining for edge cases.  for each one of these tasks and you can have people like engineers that are basically masters of that task and become the best person in the world at, as you talk about the cone guy for Waymo, become the best person in the world at cone detection.  So that's a compelling notion from a supervised learning perspective.  automating much of the process of edge case discovery and retraining neural network for each of the individual perception tasks.  And then you're looking at the machine learning in a more holistic way, basically doing end-to-end learning on the driving tasks, supervised, trained on the data of the actual driving of people.  they use comma AI.  like actual human drivers doing manual control, plus the moments of disengagement that maybe with some labeling could indicate the failure of the system.  you have a huge amount of data for positive control of the vehicle, like successful control of the vehicle, both maintaining the lane, as I think you're also working on longitudinal control of the vehicle, and then failure cases where the vehicle does something wrong that needs disengagement.  So why do you think you're right and Tesla is wrong on this?  And do you think you'll come around the Tesla way?  Do you think Tesla will come around to your way?  

Speaker 1: If you were to start a chess engine company, would you hire a bishop guy?  

Speaker 0: See, we have this is Monday morning.  quarterbacking is yes, probably.  

Speaker 1: Oh, our rook guy.  Oh, we stole the rook guy from that company.  Oh, we're going to have real good rooks.  

Speaker 0: Well, there's not many pieces, right?  There's not many guys and gals to hire.  You just have a few that work on the bishop, a few that work on the rook.  

Speaker 1: But is that not ludicrous today to think about in a world of AlphaZero?  

Speaker 0: But AlphaZero is a chess game.  So the fundamental question is, how hard is driving compared to chess?  So long-term, end-to-end, will be the right solution.  The question is, how many years away is that?  

Speaker 1: End-to-end is going to be the only solution for level five.  

Speaker 0: For the only way we'll get there.  Of course.  

Speaker 1: And of course Tesla's going to come around to my way.  And if you're a rook guy out there, I'm sorry.  

Speaker 0: The cone guy.  I don't know.  We're going to specialize each task.  

Speaker 1: We're going to really understand rook placement.  Yeah.  

Speaker 0: I understand the intuition you have.  I mean, that is a very compelling notion that we can learn the task end to end, like the same compelling notion you might have for natural language conversation.  But I'm not sure Because one thing you sneaked in there is the assertion that it's impossible to get to level five without this kind of approach.  I don't know if that's obvious.  

Speaker 1: I don't know if that's obvious either.  I don't actually mean that.  I think that it is much easier to get to level five with an end-to-end approach.  I think that the other approach is doable, but the magnitude of the engineering challenge may exceed what humanity is capable of.  

Speaker 0: So, but what do you think of the Tesla data engine approach?  Which to me is an active learning task.  It's kind of fascinating.  It's breaking it down into these multiple tasks and mining their data constantly for like edge cases for these different tasks.  

Speaker 1: But the tasks themselves are not being learned.  This is feature engineering.  

Speaker 0: I mean, it's a higher abstraction level of feature engineering for the different tasks.  It's task engineering in a sense.  

Speaker 1: It's slightly better feature engineering, but it's still fundamentally is feature engineering.  And if anything about the history of AI has taught us anything, it's that feature engineering approaches will always be replaced and lose to end to end.  Now, to be fair, I cannot really make promises on timelines, but I can say that when you look at the code for Stockfish and the code for AlphaZero, one is a lot shorter than the other.  A lot more elegant, required a lot less programmer hours to write.  

Speaker 0: Yeah, but there was a lot more murder of bad agents on the AlphaZero side.  By murder, I mean agents that played a game and failed miserably.  

Speaker 1: Yeah.  

Speaker 0: Oh, oh.  In simulation, that failure is less costly.  Yeah.  In real world, it's- Wait, do you mean in practice?  

Speaker 1: Like AlphaZero has lost games miserably?  

Speaker 0: No.  

Speaker 1: I haven't seen that.  

Speaker 0: No, but I know, but the requirement for AlphaZero is to be able to like evolution, human evolution, not human evolution, biological evolution of life on earth from the origin of life has murdered trillions upon trillions of organisms on the path to us humans.  So the question is, can we stitch together a human-like object without having to go through the entirety process of evolution?  

Speaker 1: Well, no, but do the evolution and simulation.  

Speaker 0: Yeah, that's the question.  Can we simulate?  So do you have a sense that it's possible to simulate some aspect of it?  

Speaker 1: Mu zero is exactly this.  Mu zero is the solution to this.  Mu zero, I think, is going to be looked back as the canonical paper.  And I don't think deep learning is everything.  I think that there's still a bunch of things missing to get there.  But mu zero, I think, is going to be looked back as the kind of cornerstone paper of this whole deep learning era, and MuZero is the solution to self-driving cars.  You have to make a few tweaks to it, but MuZero does effectively that.  It does those rollouts and those murdering in a learned simulator, in a learned dynamics model.  

Speaker 0: It's interesting, it doesn't get enough love.  

Speaker 1: I was blown away when I read that paper.  I'm like, you know, okay, I've always had a comma.  I'm gonna sit and I'm gonna wait for the solution to self-driving cars to come along.  This year I saw it, it's MuZero.  So sit back and let the winning roll in.  

Speaker 0: So your sense, just to elaborate a little bit, to linger on the topic, your sense is neural networks will solve driving.  

Speaker 1: Yes.  

Speaker 0: Like we don't need anything else.  

Speaker 1: I think the same way chess was.  maybe the chess and maybe Google are the pinnacle of like search algorithms and things that look kind of like a star.  Um, the pinnacle of this error is going to be self-driving cars.  

Speaker 0: But on the path to that, you have to deliver products.  And it's possible that the path to full self-driving cars will take decades.  

Speaker 1: I doubt it.  

Speaker 0: How long would you put on it?  Like what are we, you're chasing it, Tesla's chasing it.  What are we talking about, five years, ten years, fifty years?  

Speaker 1: Let's say in the twenty twenties.  

Speaker 0: In the twenty twenties?  

Speaker 1: The later part of the twenty twenties.  

Speaker 0: with the neural network.  That would be nice to see.  And on the path to that, you're delivering products, which is a nice L-two system.  That's what Tesla is doing, a nice L-two system.  

Speaker 1: It just gets better every time.  The only difference between L-two and the other levels is who takes liability.  And I'm not a liability guy.  I don't want to take liability.  I'm going to level two forever.  

Speaker 0: Now, on that little transition, I mean, how do you make the transition work?  Is this where driver sensing comes in?  Like, how do you make the, because you said a hundred miles, like, is there some sort of human factors, psychology thing where people start to overtrust the system, all those kinds of effects.  Once it gets better and better and better and better, they get lazier and lazier and lazier.  Is that, like, how do you get that transition right?  

Speaker 1: First off, our monitoring is already adaptive.  Our monitoring has already seen adaptive.  

Speaker 0: Driver monitoring, is this the camera that's looking at the driver?  You have an infrared camera in the...  

Speaker 1: Our policy for how we enforce the driver monitoring is scene adaptive.  

Speaker 0: What's that mean?  

Speaker 1: Well, for example, in one of the extreme cases, if the car is not moving, we do not actively enforce driver monitoring.  All right.  If you are going through a like a forty five mile an hour road with lights and stop signs and potentially pedestrians, we enforce a very tight driver monitoring policy.  If you are alone on a perfectly straight highway and this is it's all machine learning.  None of that is hand coded.  Actually, the stop is hand coded.  

Speaker 0: So there's some kind of machine learning.  estimation of risk.  Yes.  Yeah.  I mean, I've always been a huge fan of that.  It's difficult to do.  every step into that direction is a worthwhile step to take.  It might be difficult to do really well.  Like us humans are able to estimate risk pretty damn well, whatever the hell that is.  That feels like one of the nice features of us humans.  Cause like we humans are really good drivers when we're really like tuned in and we're good at estimating risk.  Like when are we supposed to be tuned in?  

Speaker 1: And, you know, people are like, oh, well, you know, why would you ever make the driver monitoring policy less aggressive?  Why would you always not keep it at its most aggressive?  Because then people are just going to get fatigued from it.  

Speaker 0: When they get annoyed, you want them, you want the experience to be pleasant.  

Speaker 1: Obviously, I want the experience to be pleasant.  But even just from a straight up safety perspective, if you alert people when they look around and they're like, why is this thing alerting me?  There's nothing I could possibly hit right now.  People will just learn to tune it out.  People will just learn to tune it out, to put weights on the steering wheel, to do whatever to overcome it.  And remember that you're always part of this adaptive system.  So all I can really say about how this scales going forward is, yeah, it's something we have to monitor for.  We don't know.  This is a great psychology experiment at scale.  We'll see.  We'll track it.  And making sure you have a good understanding of attention is a very key part of that psychology problem.  

Speaker 0: Yeah, I think, I mean, you and I probably have a different, come to it differently, but to me, it's a fascinating psychology problem to explore something much deeper than just driving.  It's such a nice way to explore human attention and human behavior, which is why, again, we've probably both criticized Elon Musk on this one topic from different, avenues, both offline and online.  I had little chats with Elon.  I love human beings.  As a computer vision problem, as an AI problem, it's fascinating.  He wasn't so much interested in that problem.  is like in order to solve driving, the whole point is you want to remove the human from the picture.  And it seems like you can't do that quite yet.  Eventually, yes, but you can't quite do that yet.  So this is the moment where you can't yet say, I told you so to Tesla, but it's getting there because I don't know if you've seen this, there's some reporting that they're in fact starting to do driver mod.  

Speaker 1: Yeah, they ship the model on shadow mode.  

Speaker 0: with, I believe, only a visible light camera.  It might even be fisheye.  It's like a low resolution.  

Speaker 1: Low resolution, visible light.  I mean, to be fair, that's what we have in the EON as well.  Our last generation product.  This is the one area where I can say our hardware is ahead of Tesla.  The rest of our hardware, way, way behind, but our driver monitoring camera.  

Speaker 0: So you think, I think on the third row Tesla podcast or somewhere else, I've heard you say that obviously eventually they're going to have driver monitoring.  

Speaker 1: I think what I've said is Elon will definitely ship driver monitoring before he ships level five.  

Speaker 0: Before level five.  

Speaker 1: And I'm willing to bet ten grand on that.  

Speaker 0: And you bet ten grand on that.  

Speaker 1: I mean, now I don't want to take the bet, but before maybe someone would have.  I should have got my money in.  Yeah.  

Speaker 0: It's an interesting bet.  I think you're right.  I'm actually on a human level because he's been he's made the decision, like he said that driver monitoring is the wrong way to go.  But you have to think of as a human, as a CEO, I think that's the right thing to say.  when Like sometimes you have to say things publicly that are different than what you actually believe, because when you're producing a large number of vehicles and the decision was made not to include the camera, like what are you supposed to say?  Like our cars don't have the thing that I think is right to have.  It's an interesting thing, but like on the other side, as a CEO, I mean, something you could probably speak to as a leader, I think about me as a human, to publicly change your mind on something.  How hard is that?  Especially when assholes like George Ha say, I told you so.  

Speaker 1: All I will say is I am not a leader and I am happy to change my mind.  Do you think Elon will?  Yeah, I do.  I think he'll come up with a good way to make it psychologically okay for him.  

Speaker 0: Well, it's such an important thing, man, especially for a first principles thinker, because he made a decision that driver monitoring is not the right way to go.  And I could see that decision.  And I could even make that decision.  Like I was on the fence too.  Like I'm not, driver monitoring is such an obvious, simple solution to the problem of attention.  It's not obvious to me that just by putting a camera there, you solve things.  You have to create an incredible, compelling experience, just like you're talking about.  I don't know if it's easy to do that.  It's not at all easy to do that, in fact, I think.  So as a creator of a car that's trying to create a product that people love, which is what Tesla tries to do, right?  It's not obvious to me that as a design decision, whether adding a camera is a good idea.  From a safety perspective either, in the human factors community, everybody says that you should obviously have driver sensing, driver monitoring, but that That's like saying it's obvious, as parents, you shouldn't let your kids go out at night.  But okay.  But like, they're still gonna find ways to do drugs.  Like, you have to also be good parents.  So like, it's much more complicated than just like, you need to have driving monitoring.  

Speaker 1: I totally disagree on, okay, if you have a camera there, and the camera's watching the person, but never throws an alert, they'll never think about it.  Right?  The driver monitoring policy that you choose to—how you choose to communicate with the user is entirely separate from the data collection perspective.  Right?  So, you know, like, there's one thing to say, like, you know, tell your teenager they can't do something.  There's another thing to, like, you know, gather the data.  

Speaker 0: So you can make informed decisions.  That's really interesting.  But you have to make that.  That's the interesting thing about cars.  But even true with CalmAI, you don't have to manufacture the thing into the car.  You have to make a decision that anticipates the right strategy long term.  So you have to start collecting the data and start making decisions.  

Speaker 1: Started it three years ago.  I believe that we have the best driver monitoring solution in the world.  I think that when you compare it to, well, Super Cruise is the only other one that I really know that shipped, and ours is better.  

Speaker 0: What do you like and not like about Super Cruise?  

Speaker 1: I mean, I had a few SuperCruise.  The sun would be shining through the window, would blind the camera, and it would say I wasn't paying attention when I was looking completely straight.  I couldn't reset the attention with a steering wheel touch, and SuperCruise would disengage.  I was communicating to the car.  I'm like, look, I am here.  I am paying attention.  Why are you really going to force me to disengage?  And it did.  So it's a constant conversation with the user.  And yeah, there's no way to ship a system like this if you can't OTA.  We're shipping a new one every month.  Sometimes we balance it with our users on Discord.  Sometimes we make the driver monitoring a little more aggressive and people complain.  Sometimes they don't.  We want it to be as aggressive as possible where people don't complain and it doesn't feel intrusive.  

Speaker 0: So being able to update the system over the air is an essential component.  I mean, that's probably, to me, you mentioned.  I mean, to me, that is the biggest innovation of Tesla, that it made people realize that over-the-air updates is essential.  

Speaker 1: Yeah.  I mean, was that not obvious from the iPhone?  The iPhone was the first real product that OTA'd, I think.  

Speaker 0: What's it actually?  That's brilliant.  You're right.  

Speaker 1: I mean, the game consoles used to not, right?  The game consoles were maybe the second thing that did.  

Speaker 0: Wow.  I didn't really think about it.  Well, one of the amazing features of a smartphone isn't just like the touchscreen isn't the thing.  It's the ability to constantly update.  

Speaker 1: Yeah, it gets better.  

Speaker 0: It gets better.  

Speaker 1: I love my iOS fourteen.  

Speaker 0: Yeah.  One thing that I probably disagree with you on driver monitoring is you've said that it's easy.  I mean, you tend to say stuff is easy.  I guess you said it's easy relative to the external perception problem.  Can you elaborate why you think it's easy?  

Speaker 1: Feature engineering works for driver monitoring.  Feature engineering does not work for the external.  

Speaker 0: So human faces are not, human faces and the movement of human faces and head and body is not as variable as the external environment, is your intuition?  

Speaker 1: Yes, and there's another big difference as well.  Your reliability of a driver monitoring system doesn't actually need to be that high.  The uncertainty, if you have something that's detecting whether the human's paying attention and only works at the time, you're still getting almost all the benefit of that.  because the human, you're training the human.  You're dealing with a system that's really helping you out.  It's a conversation.  It's not like the external thing where, guess what?  If you swerve into a tree, you swerve into a tree.  You get no margin for error there.  

Speaker 0: Yeah, I think that's really well put.  I think that's exactly the place where, comparing to the external perception and the control problem, driver monitoring is easier because the bar for success is much lower.  Yeah, but I still think like the human face is more complicated actually than the external environment, but for driving, you don't give a damn.  

Speaker 1: I don't need something that complicated to have to communicate the idea to the human that I want to communicate, which is, yo, system might mess up here.  You got to pay attention.  

Speaker 0: Yeah.  See, that's my love and fascination is the human face.  And it feels like this is a nice place to create products that create an experience in the car.  It feels like there should be more richer experiences in the car.  You know, like that's an opportunity for like something like I'm AI or just any kind of system like a Tesla or any of the autonomous vehicle companies is because software is, and there's much more sensors and so much is on a software and you're doing machine learning anyway.  There's an opportunity to create totally new experiences that we're not even anticipating.  You don't think so?  

Speaker 1: No.  

Speaker 0: You think it's a box that gets you from A to B and you want to do it.  Chill.  

Speaker 1: Yeah, I mean, I think as soon as we get to level three on highways, OK, enjoy your Candy Crush.  Enjoy your Hulu.  Enjoy your, you know, whatever, whatever.  Sure, you get this.  You can look at screens, basically.  Versus right now, what do you have?  Music and audiobooks.  

Speaker 0: So level three is where you can kind of disengage in stretches of time.  Well, you think level three is possible?  Like on the highway going for a hundred miles and you can just go to sleep?  Oh, yeah.  

Speaker 1: Sleep.  So again, I think it's really all on a spectrum.  I think that being able to use your phone while you're on the highway and this all being okay and being aware that the car might alert you and you have five seconds to basically.  

Speaker 0: So the five second thing you think is possible.  

Speaker 1: Yeah, I think it is, oh yeah.  Not in all scenarios.  Some scenarios it's not.  

Speaker 0: It's the whole risk thing that you mentioned is nice.  It's to be able to estimate how risky is this situation.  That's really important to understand.  One other thing you mentioned comparing Kama and Autopilot is that something about the haptic feel of the way Kamo controls the car when things are uncertain.  It behaves a little bit more uncertain when things are uncertain.  That's kind of an interesting point.  And an autopilot is much more confident always, even when it's uncertain, until it runs into trouble.  That's a funny thing.  I actually mentioned that to Elon, I think.  And then the first time we talked, he wasn't biting.  It's like communicating uncertainty.  I guess Comet doesn't really communicate uncertainty explicitly.  It communicates it through haptic feel.  What's the role of communicating uncertainty, do you think?  

Speaker 1: Oh, we do some stuff explicitly.  Like we do detect the lanes when you're on the highway, and we'll show you how many lanes we're using to drive with.  You can look at where it thinks the lanes are.  You can look at the path.  And we want to be better about this.  We're actually hiring.  We want to hire some new UI people.  

Speaker 0: UI people.  You mentioned this.  Because it's a UI problem, too, right?  

Speaker 1: We have a great designer now.  But we need people who are just going to build this and debug these UIs.  Qt people.  

Speaker 0: Qt.  Is that what the UI is done with, is Qt?  

Speaker 1: The new UI is in Qt.  

Speaker 0: C++, Qt?  

Speaker 1: Tesla uses it, too.  

Speaker 0: Yeah.  

Speaker 1: We had some React stuff in there.  

Speaker 0: React.js or just React?  React is its own language, right?  

Speaker 1: React Native.  React is a JavaScript framework.  Yeah.  It's all based on JavaScript, but it's, you know.  I like C++.  

Speaker 0: What do you think about Dojo with Tesla and their foray into what appears to be specialized hardware for training your nets?  I guess it's something, maybe you can correct me for my shallow looking at it.  It seems like something that Google did with TPUs, but specialized for driving data.  

Speaker 1: I don't think it's specialized for driving data.  

Speaker 0: It's just legit, just TPU.  They want to go the Apple way.  Basically, everything required in the chain is done in-house.  

Speaker 1: Well, so you have a problem right now.  And this is one of my concerns.  I really would like to see somebody deal with this.  If anyone out there is doing it, I'd like to help them if I can.  You basically have two options right now to train.  Your options are NVIDIA or Google.  So Google is not even an option.  Their TPUs are only available in Google Cloud.  Google has absolutely onerous Terms of Service restrictions.  They may have changed it, but back in Google's Terms of Service, it said explicitly you are not allowed to use Google Cloud ML for training autonomous vehicles or for doing anything that competes with Google without Google's prior written permission.  I mean, Google is not a platform company.  I wouldn't touch TPUs with a ten-foot pole.  So, that leaves you with the monopoly.  NVIDIA?  NVIDIA.  So, I mean... That you're not a fan of?  Well, look, I was a huge fan of, in the year of the NVIDIA in the year of the NVIDIA in the year of the NVIDIA in the year of the NVIDIA in the year of the NVIDIA.  in the year of the NVIDIA.  in the year of the NVIDIA.  in the year of the NVIDIA.  in the year of the NVIDIA.  in the year of the NVIDIA.  in the year of the NVIDIA in the year of the NVIDIA in the year of the NVIDIA in the year of the NVIDIA in the year of the NVIDIA in the year of the NVIDIA.  in the year of the NVIDIA.  in the year of the NVIDIA in the year of the NVIDIA in the Cool guy when the stock was thirty dollars a share.  NVIDIA stock has skyrocketed.  I witnessed a real change in who was in management over there in like twenty eighteen.  And now they are, let's exploit, let's take every dollar we possibly can out of this ecosystem.  Let's charge ten thousand dollars for A-one hundreds because we know we got the best shit in the game.  And let's charge ten thousand dollars for an A-one hundred when it's really not that different from a thirty eighty, which is six ninety nine.  The margins that they are making off of those high-end chips are so high that, I mean, I think they're shooting themselves in the foot, just from a business perspective, because there's a lot of people talking like me now, who are like, somebody's gotta take NVIDIA down.  Where they could dominate it.  NVIDIA could be the new Intel.  

Speaker 0: Yeah, to be inside everything, essentially.  And yet the winners in certain spaces like autonomous driving, the winners, only the people who are like desperately falling back and trying to catch up and have a ton of money, like the big automakers, are the ones interested in partnering with NVIDIA.  

Speaker 1: Oh, and I think a lot of those things are going to fall through.  If I were NVIDIA, sell chips.  Sell chips at a reasonable markup.  

Speaker 0: To everybody.  

Speaker 1: To everybody.  

Speaker 0: Without any restrictions.  

Speaker 1: Without any restrictions.  Intel did this.  Look at Intel.  They had a great long run.  Nvidia is trying to turn their, they're like trying to productize their chips way too much.  They're trying to extract way more value than they can sustainably.  Sure, you can do it tomorrow.  Is it going to up your share price?  Sure.  If you're one of those CEOs who's like, how much can I strip mine this company?  And you know, and that's, what's weird about it too.  Like the CEO is the founder.  It's the same guy.  I mean, I still think Jensen's a great guy.  Why do this?  You have a choice.  You have a choice right now.  Are you trying to cash out?  Are you trying to buy a yacht?  If you are, fine.  But if you're trying to be the next huge semiconductor company, sell chips.  

Speaker 0: Well, the interesting thing about Jensen is he is a big vision guy.  a plan, like, for fifty years down the road.  So, it makes me wonder, like...  

Speaker 1: How does price gouging fit into it?  

Speaker 0: Yeah, how does that, like, it doesn't seem to make sense as a plan.  

Speaker 1: I worry that he's listening to the wrong people.  

Speaker 0: Yeah, that's the sense I have, too, sometimes, because I, despite everything, I think NVIDIA is an incredible company.  Well, one, I'm deeply grateful to NVIDIA for the products they've created in the past, right?  And so...  

Speaker 1: But the Ten ADTI was a great GPU.  Still have a lot of them.  

Speaker 0: Still is, yeah.  But at the same time, it just feels like feels like you don't want to put all your stock in NVIDIA.  And so like Elon is doing, what Tesla is doing with Autopilot and Dojo is the Apple way, because they're not going to share Dojo with George Hotz.  

Speaker 1: I know, they should sell that chip.  Oh, they should sell, even their accelerator, the accelerator that's in all the cars, the thirty watt one.  Sell it, why not?  

Speaker 0: So open it up.  Why does Tesla have to be a car company?  

Speaker 1: Well, if you sell the chip, here's what you get.  Make some money off the chips.  It doesn't take away from your chip.  You're going to make some money, free money.  And also, the world is going to build an ecosystem of tooling for you.  You're not going to have to fix the bug in your tanh layer.  Someone else already did.  

Speaker 0: Well, the question, that's an interesting question.  I mean, that's the question Steve Jobs asked.  That's the question Elon Musk is perhaps asking is, do you want Tesla stuff inside other vehicles?  Potentially inside like iRobot vacuum cleaner.  

Speaker 1: I think you should decide where your advantages are.  I'm not saying Tesla should start selling battery packs to automakers, because battery packs to automakers, they are straight up in competition with you.  If I were Tesla, I'd keep the battery technology totally as is ours.  We make batteries.  But the thing about the Tesla TPU is anybody can build that.  It's just a question of are you willing to spend the money?  

Speaker 0: It could be a huge source of revenue, potentially.  

Speaker 1: Are you willing to spend a hundred million dollars?  Right?  Anyone can build it.  And someone will.  And a bunch of companies now are starting trying to build AI accelerators.  Somebody's going to get the idea right.  And yeah, hopefully they don't get greedy because they'll just lose to the next guy who finally, and then eventually the Chinese are going to make knockoff Nvidia chips and that's...  

Speaker 0: From your perspective, I don't know if you're also paying attention.  Stay on Tesla for a moment.  Dave, Elon Musk has talked about a complete rewrite of the neural net that they're using.  that seems to, again, I'm half paying attention, but it seems to involve basically a kind of integration of all the sensors to where It's a four-dimensional view.  You have a three-D model of the world over time.  I think it's done both for the neural network is able to, in a more holistic way, deal with the world and make predictions and so on, but also to make the annotation task more you know, easier, like you can annotate the world in one place and then kind of distribute itself across the sensors and across the different, like the hundreds of tasks that are involved in the hydranet.  What are your thoughts about this rewrite?  Is it just like some details that are kind of obvious that are steps that should be taken, or is there something fundamental that could challenge your idea that end-to-end is the right solution?  

Speaker 1: We're in the middle of a big rewrite now as well.  We haven't shipped a new model in a bit.  

Speaker 0: Of what kind?  

Speaker 1: We're going from two-D to three-D.  Right now all our stuff, like for example, when the car pitches back, the lane lines also pitch back, because we're assuming the flat world hypothesis.  The new models do not do this.  The new models output everything in three-D.  

Speaker 0: But there's still no annotation, so the three Ds, it's more about the output.  Yeah.  

Speaker 1: We have Zs and everything.  

Speaker 0: Zs?  Yeah.  We added the Zs.  We added the Zs.  

Speaker 1: We unified a lot of stuff as well.  We switched from TensorFlow to PyTorch.  Nice.  My understanding of what Tesla's thing is, is that their annotator now annotates across the time dimension.  I mean, Q, why are you building an annotator?  

Speaker 0: I find their entire pipeline.  I find your vision, I mean, the vision of end-to-end very compelling, but I also like the engineering of the data engine that they've created.  In terms of supervised learning pipelines, that thing is damn impressive.  You're basically, the idea is that you have hundreds of thousands of people that are doing data collection for you by doing their experience.  So that's kind of similar to the CalmAI model.  And you're able to mine that data based on the kind of edge cases you need.  I think it's harder to do in the end-to-end learning.  the mining of the right edge cases.  That's where feature engineering is actually really powerful, because us humans are able to do this kind of mining a little better.  But yeah, there's obvious, as we know, there's obvious constraints and limitations to that idea.  

Speaker 1: Karpathy just tweeted.  He's like, you get really interesting insights if you sort your validation set by loss and look at the highest loss examples.  

Speaker 0: Yeah.  

Speaker 1: So yeah, I mean, you can do... we have a little data engine-like thing.  We're training a segnet.  Anyway, it's not fancy.  It's just like, okay, train the new segnet, run it on a hundred thousand images, and now take the thousand with highest loss, select a hundred of those by human, put those, get those ones labeled, retrain, do it again.  So it's a much less well-written data engine.  And yeah, you can take these things really far, and it is impressive engineering.  And if you truly need supervised data for a problem, yeah, things like Data Engine are the high end of the... What is attention?  Is a human paying attention?  I mean, we're going to probably build something that looks like Data Engine to push our driver monitoring further.  But for driving itself, you have it all annotated beautifully by what the human does.  

Speaker 0: Yeah, that's interesting.  I mean, that applies to driver attention as well.  Do you want to detect the eyes?  Do you want to detect blinking and pupil movement?  Do you want to detect all the, like, face alignments, landmark detection, and so on, and then doing kind of reasoning based on that?  Or do you want to take the entirety of the face over time and do end-to-end?  I mean, it's obvious that eventually you have to do end-to-end with some calibration and some fixes and so on, but it's like, I don't know when that's the right move.  

Speaker 1: Even if it's end to end, you have to supervise that with humans.  Whether a human is paying attention or not is a completely subjective judgment.  You can try to automatically do it with some stuff, but you don't have, if I record a video of a human, I don't have true annotations anywhere in that video.  The only way to get them is with other humans labeling it, really.  

Speaker 0: Well, I don't know.  If you think deeply about it, You could, you might be able to, depending on the task, you might be able to discover self-annotating things like, you know, you can look at like steering wheel reverse or something like that.  You can discover little moments of lapse of attention.  I mean, that's... That's where psychology comes in.  Is there indicate, because you have so much data to look at.  So you might be able to find moments when there's just inattention, even with smartphone, if you want to detect smartphone use.  You can start to zoom in.  I mean, that's the goldmine, sort of the comma AI.  I mean, Tesla's doing this too, right?  They're doing... annotation based on self-supervised learning, too.  It's just a small part of the entire picture.  That's kind of the challenge of solving a problem in machine learning, if you can discover self-annotating parts of the problem.  

Speaker 1: Our driver monitoring team is half a person right now.  Once we have two, three people on that team, I definitely want to look at self-annotating stuff for attention.  

Speaker 0: Let's go back for a sec to to a comma and what you know, for people who are curious to try it out.  How do you install a comma in say, a toy Toyota Corolla?  Or like, what are the cars that are supported?  What are the cars that you recommend?  And what does it take?  You have a few videos out, but maybe through words, can you explain what's it take to actually install the thing?  

Speaker 1: So we support, I think it's ninety-one cars, ninety-one makes and models.  We'll get to a hundred this year.  

Speaker 0: Nice.  

Speaker 1: The, yeah, the twenty-twenty Corolla, great choice.  The twenty-twenty Sonata, it's using the stock longitudinal.  It's using just our lateral control, but it's a very refined car.  Their longitudinal control is not bad at all.  So, yeah.  Corolla, Sonata, or if you're willing to get your hands a little dirty and look in the right places on the internet, the Honda Civic is great.  But you're going to have to install a modified EPS firmware in order to get a little bit more torque.  And I can't help you with that.  Kama does not officially endorse that.  But we have been doing it.  We didn't ever release it.  We waited for someone else to discover it.  And then, you know.  

Speaker 0: And you have a Discord server where people, there's a very active developer community, I suppose.  So depending on the level of experimentation you're willing to do, that's a community.  

Speaker 1: If you just want to buy it and you have a supported car, it's ten minutes to install.  There's YouTube videos.  It's Ikea furniture level.  If you can set up a table from Ikea, you can install a comma two in your supported car and it will just work.  Now you're like, oh, but I want this high end feature or I want to fix this bug.  Okay.  Well, welcome to the developer community.  

Speaker 0: Uh, so what, if I wanted to, this is something I asked you offline, uh, like a few months ago, if I wanted to run my own code.  So use Kama as a platform and try to run something like OpenPilot.  What does it take to do that?  

Speaker 1: So there's a toggle in the settings called Enable SSH.  And if you toggle that, you can SSH into your device.  You can modify the code.  You can upload whatever code you want to it.  There's a whole lot of people, so about sixty percent of people are running stock, comma.  About forty percent of people are running forks.  And there's a community of, there's a bunch of people who maintain these forks, and these forks support different cars, or they have, you know, different toggles.  We try to keep away from the toggles that are like disabled driver monitoring, but, you know, there's, some people might want that kind of thing, and like, you know, yeah, you can, it's your car, it's your, I'm not here to tell you, you know, We have some, you know, we ban, if you're trying to subvert safety features, you're banned from our discord.  I don't want anything to do with you, but there's some forks doing that.  

Speaker 0: Got it.  You encourage responsible forking.  

Speaker 1: Yeah.  There's forks that will do.  Some people just like having a lot of readouts on the UI, a lot of flashing numbers, so there's forks that do that.  Some people don't like the fact that it disengages when you press the gas pedal, there's forks that disable that.  

Speaker 0: Got it.  Now, the stock experience is what?  So it does both lane keeping and longitudinal control all together, so it's not separate like it is in Autopilot?  

Speaker 1: No.  So OK, some cars, we use the stock longitudinal control.  We don't do the longitudinal control in all the cars.  Some cars, the ACCs are pretty good in the cars.  It's the lane keep.  that's atrocious in anything except for Autopilot and Super Cruise.  

Speaker 0: But you just turn it on and it works.  What does disengagement look like?  

Speaker 1: Yeah.  So we have, I mean, I'm very concerned about mode confusion.  I've experienced it on Super Cruise and Autopilot, where Autopilot disengages.  I don't realize that the ACC is still on.  The lead car moves slightly over.  And then the Tesla accelerates to whatever.  my set speed is super fast.  I'm like, what's going on here?  We have engaged and disengaged.  And this is similar to my understanding, I'm not a pilot, but my understanding is either the pilot is in control or the co-pilot is in control.  And we have the same kind of transition system.  Either open pilot is engaged or open pilot is disengaged.  Engage with cruise control, disengage with either gas, brake, or cancel.  

Speaker 0: Let's talk about money.  What's the business strategy for Karma?  

Speaker 1: Profitable.  

Speaker 0: Well, so you're- We did it.  So congratulations.  What, so basically selling, so we should say Comma cost a thousand bucks, Comma two?  

Speaker 1: Two hundred for the interface to the car as well, so it's twelve hundred.  all said and done.  

Speaker 0: Nobody's usually up front like this.  

Speaker 1: You got to add the tack on, right?  

Speaker 0: Yeah.  I love it.  

Speaker 1: I'm not going to lie to you.  Trust me.  It will add twelve hundred dollars of value to your life.  

Speaker 0: Yes.  It's still super cheap.  

Speaker 1: Thirty days.  No questions asked.  Money back guarantee.  And prices are only going up.  You know, if there ever is future hardware, it could cost a lot more than twelve hundred dollars.  

Speaker 0: Tacoma three is in the works.  It could be.  

Speaker 1: All I will say is future hardware is going to cost a lot more than the current hardware.  

Speaker 0: Yeah, the people that use, the people I've spoken with that use Kama, that use OpenPilot, they, first of all, they use it a lot.  So people that use it, they fall in love with it.  

Speaker 1: Oh, our retention rate is insane.  

Speaker 0: Which is a good sign.  Yeah.  It's a really good sign.  

Speaker 1: Seventy percent of Kama II buyers are daily active users.  

Speaker 0: Yeah, it's amazing.  

Speaker 1: Oh, also, we don't plan on stopping selling the Comma-Two.  Like, it's, you know.  

Speaker 0: So whatever you create that's beyond Comma-Two, it would be, it would be potentially a phase shift.  Like, it's so much better that, like, you could use Comma-Two and you can use Comma whatever.  

Speaker 1: Depends what you want.  

Speaker 0: It's kind of, it's kind of, yeah.  

Speaker 1: You know, autopilot, hardware one versus hardware two.  The Comma-Two is kind of like hardware one.  

Speaker 0: Got it, got it.  You can still use both.  Got it, got it.  I think I heard you talk about retention rate with the VR headsets that the average is just once.  I mean, it's such a fascinating way to think about technology.  And this is a really, really good sign.  And the other thing that people say about Calm is like, they can't believe they're getting this for a thousand bucks, right?  It seems like some kind of steal.  So, but in terms of like long-term business strategies to basically to put, so it's currently in like a thousand plus cars.  

Speaker 1: More, more.  So yeah, dailies is about, dailies is about two thousand, weekly is about twenty five hundred, monthly is over three thousand.  Wow.  We've grown a lot since we last talked.  

Speaker 0: Is the goal, like, can we talk crazy for a second?  I mean, what's the goal to overtake Tesla?  Let's talk.  OK, so.  

Speaker 1: I mean, Android did overtake iOS.  

Speaker 0: That's exactly it, right?  So they did it.  I actually don't know the timeline of that one.  But let's talk, because everything is in alpha now.  The autopilot, you could argue, is in alpha in terms of towards the big mission of autonomous driving, right?  And so what, yeah, is your goal to overtake, to get millions of cars, essentially?  Of course.  

Speaker 1: Where would it stop?  Like, it's open source software.  It might not be millions of cars with a piece of Kama hardware, but yeah, I think OpenPilot at some point will cross over Autopilot in users, just like Android crossed over iOS.  

Speaker 0: How does Google make money from Android?  It's complicated.  Their own devices make money.  

Speaker 1: Google makes money by just kind of having you on the internet.  Google Search is built in.  Gmail is built in.  Android is just a shill for the rest of Google's ecosystem.  

Speaker 0: Yeah, but the problem is Android is a brilliant thing.  I mean, Android arguably changed the world.  So there you go.  You can feel good, ethically speaking.  But as a business strategy, it's questionable.  

Speaker 1: Or sell hardware.  

Speaker 0: Self-hardware.  

Speaker 1: I mean, it took Google a long time to come around to it, but they are now making money on the Pixel.  

Speaker 0: You're not about money, you're more about winning.  Yeah, of course.  

Speaker 1: No, but if only, if only ten percent of OpenPilot devices come from Kama AI.  

Speaker 0: They still make a lot.  

Speaker 1: That is still, yes, that is a ton of money for our company.  

Speaker 0: But can't somebody create a better Kama using OpenPilot?  Or are you basically saying, well, I'll compete them?  

Speaker 1: Well, I'll compete you.  Can you create a better Android phone than the Google Pixel?  Right.  I mean, you can, but like, you know.  

Speaker 0: I love that.  So you're confident, like, you know what the hell you're doing.  Yeah.  It's a competence and merit.  

Speaker 1: I mean, our money, yeah, our money comes from, we're a consumer electronics company.  Yeah.  And put it this way.  So we sold, we sold like, three thousand Commodores.  Twenty-five hundred right now.  And like, OK, we're probably going to sell ten thousand units next year.  Ten thousand units, even just a thousand dollars a unit, OK, we're at ten million in revenue.  Get that up to a hundred thousand, maybe double the price of the unit.  Now we're talking like two hundred million in revenue.  

Speaker 0: We're talking like serious.  You're actually making money.  One of the rare semi-autonomous or autonomous vehicle companies that are actually making money.  Yeah.  

Speaker 1: If you look at a model, and we were just talking about this yesterday, if you look at a model and you're testing, like you're A-B testing your model, and if you're one branch of the A-B test, the losses go down very fast in the first five epochs,  

Speaker 0: that  

Speaker 1: model is probably going to converge to something considerably better than the one where the loss is going down slower.  Why do people think this is going to stop?  Why do people think one day there's going to be a great, like, well, Waymo's eventually going to surpass you guys?  Well, they're not.  

Speaker 0: Do you see like a world where like a Tesla or a car like a Tesla would be able to basically press a button and you'd like switch to open pilot, you know, load in?  

Speaker 1: No.  So I think, so first off, I think that we may surpass Tesla in terms of users.  I do not think we're going to surpass Tesla ever in terms of revenue.  I think Tesla can capture a lot more revenue per user than we can.  But this mimics the Android iOS model exactly.  There may be more Android devices, but there's a lot more iPhones than Google Pixels.  So I think there'll be a lot more Tesla cars sold than pieces of comma hardware.  And then, as far as a Tesla owner being able to switch to OpenPilot, does iOS, does iPhones run Android?  

Speaker 0: No.  

Speaker 1: You can if you really want to do it, but it doesn't really make sense.  

Speaker 0: It doesn't make sense.  Who cares?  What about if a large company like automakers, Ford, GM, Toyota, came to George Haas, or on the tech space, Amazon, Facebook, Google, came with a large pile of cash.  Would you consider being purchased?  Do you see that as one possible?  

Speaker 1: Not seriously, no.  I would probably see how much shit they'll entertain from me.  And if they're willing to jump through a bunch of my hoops, then maybe.  But no, not the way that M&A works today.  I mean, we've been approached.  And I laugh in these people's faces.  I'm like, are you kidding?  You know, because it's so demeaning.  The M&A people are so demeaning to companies.  They treat the startup world as their innovation ecosystem.  And they think that I'm cool with going along with that.  so I can have some of their scam, fake Fed dollars.  You know, Fed coin.  What am I going to do with more Fed coin?  

Speaker 0: You know?  Fedcoin.  

Speaker 1: Fedcoin, man.  

Speaker 0: I love that.  So that's the cool thing about podcasting, actually, is people criticize.  I don't know if you're familiar with Spotify giving Joe Rogan a hundred million.  

Speaker 1: I heard something about that.  

Speaker 0: And they respect, despite all the shit that people are talking about Spotify, People understand that podcasters, like Joe Rogan, know what the hell they're doing.  So they give them money and say, just do what you do.  And the equivalent for you would be like, George, do what the hell you do because you're good at it.  Try not to murder too many people.  There's some kind of common sense.  things like, just don't go on a weird, rampage of...  

Speaker 1: Yeah, it comes down to what companies I could respect, right?  You know, could I respect GM?  Never.  No, I couldn't.  I mean, could I respect, like, a Hyundai?  More so, right?  That's a lot closer.  Toyota?  Nah, Korean is the way.  I think that, you know, the Japanese, the Germans, the US, they're all too... You know, they all think they're too great, to be honest.  

Speaker 0: What about the tech companies?  Apple?  

Speaker 1: Apple is, of the tech companies that I could respect, Apple's the closest.  Yeah.  

Speaker 0: I mean, I could never say- It would be ironic if common AI is acquired by Apple.  

Speaker 1: I mean, Facebook, look, I quit Facebook ten years ago because I didn't respect their business model.  Google has declined so fast in the last five years.  

Speaker 0: What are your thoughts about Waymo and its present and its future?  Let me start by saying something nice, which is I've visited them a few times and have ridden in their cars.  And the engineering that they're doing, both the research and the actual development and the engineering they're doing and the scale they're actually achieving by doing it all themselves is really impressive.  and the balance of safety and innovation and like the cars work.  really well for the routes they drive.  Like, it drives fast, which was very surprising to me.  Like, it drives, like, the speed limit or faster than the speed limit.  It goes.  And it works really damn well.  And the interface is nice.  

Speaker 1: In Chandler, Arizona, yeah.  

Speaker 0: Yeah, in Chandler, Arizona, very specific environment.  So it gives me enough material in my mind to push back against the madmen of the world, like George Hotz, to be like, Because you kind of imply there's zero probability they're going to win.  And after I've written in it, to me it's not zero.  

Speaker 1: Oh, it's not for technology reasons.  

Speaker 0: Bureaucracy?  

Speaker 1: No, it's worse than that.  It's actually for product reasons, I think.  

Speaker 0: Oh, you think they're just not capable of creating an amazing product?  

Speaker 1: No, I think that the product that they're building doesn't make sense.  So, a few things.  You say the Waymos are fast.  Benchmark a Waymo against a competent Uber driver.  

Speaker 0: Right.  

Speaker 1: The Uber driver's faster.  

Speaker 0: It's not even about speed.  It's the thing you said.  It's about the experience of being stuck at a stop sign because pedestrians are crossing nonstop.  

Speaker 1: I like when my Uber driver doesn't come to a full stop at the stop sign, you know?  And so, Let's say the Waymos are at of slower than an Uber, right?  You can argue that they're gonna be cheaper.  And I argue that users already have the choice to trade off money for speed.  It's called Uber Pool.  I think it's like of rides at Uber Pools, right?  Users are not willing to trade off money for speed.  So the whole product that they're building is not going to be competitive with traditional ride sharing networks.  And also, whether there's profit to be made depends entirely on one company having a monopoly.  I think that the level four autonomous ride sharing vehicles market is gonna look a lot like the scooter market, if even the technology does come to exist, which I question.  Who's doing well in that market?  

Speaker 0: It's a race to the bottom, you know?  Well, it could be closer to like an Uber and a Lyft, where it's just one or two players.  

Speaker 1: Well, the scooter people have given up trying to market scooters as a practical means of transportation.  And they're just like, they're super fun to ride.  Look at wheels.  I love those things.  And they're great on that front.  But from an actual transportation product perspective, I do not think scooters are viable.  And I do not think level four autonomous cars are viable.  

Speaker 0: If you, let's play a fun experiment.  If you ran, let's do Tesla and let's do Waymo.  If Elon Musk took a vacation for a year, he just said, screw it, I'm going to go live on an island, no electronics.  And the board decides that we need to find somebody to run the company.  And they decide that you should run the company for a year.  How do you run Tesla differently?  

Speaker 1: I wouldn't change much.  

Speaker 0: Do you think they're on the right track?  

Speaker 1: I wouldn't change.  I mean, I'd have some minor changes, but even my debate with Tesla about end-to-end versus segnets, that's just software.  Who cares?  It's not like you're doing something terrible with segnets.  You're probably building something that's at least going to help you debug the end-to-end system a lot.  It's very easy to transition from what they have to an end-to-end kind of thing.  

Speaker 0: And then I presume you would, in the Model Y or maybe in the Model Three, start adding driver sensing with infrared.  

Speaker 1: Yes, I would add infrared lights right away to those cars.  

Speaker 0: And start collecting that data and do all that kind of stuff.  Yeah.  

Speaker 1: Very much.  I think they're already kind of doing it.  It's an incredibly minor change.  If I actually were CEO of Tesla, first off, I'd be horrified that I wouldn't be able to do a better job as Elon.  And then I would try to understand the way he's done things before.  

Speaker 0: You would also have to take over his Twitter.  

Speaker 1: I don't tweet.  

Speaker 0: Yeah, what's your Twitter situation?  Why are you so quiet on Twitter?  What's your social network presence like?  On Instagram, you do live streams.  You understand the music of the internet.  But you don't always fully engage into it.  You're part-time.  

Speaker 1: I used to have a Twitter.  Yeah, I mean, Instagram is a pretty place.  Instagram is a beautiful place.  It glorifies beauty.  I like Instagram's values as a network.  Twitter glorifies conflict, glorifies, you know, like shots, taking shots at people.  And it's like, you know, Twitter and Donald Trump are perfectly, They're perfect for each other.  

Speaker 0: So Tesla's on the right track, in your view.  Yeah.  OK, so let's really try this experiment.  If you ran Waymo, let's say they're, I don't know if you agree, but they seem to be at the head of the pack of the kind of, what would you call that approach?  It's not necessarily LiDAR based, because it's not about LiDAR.  

Speaker 1: Level four Robotaxi.  

Speaker 0: Level four Robotaxi, all in before making any revenue.  So they're probably at the head of the pack.  If you were said, Hey, George, can you please run this company for a year?  How would you change it?  

Speaker 1: I would go I would get Anthony Levandowski out of jail, and I would put him in charge of company.  

Speaker 0: Let's try to break that apart.  Do you want to destroy the company by doing that, or do you mean a renegade-style thinking that throws away bureaucracy and goes to first principle thinking?  What do you mean by that?  

Speaker 1: I think Anthony Lewandowski is a genius, and I think he would come up with a much better idea of what to do with Waymo than me.  

Speaker 0: So you mean that unironically, he is a genius?  

Speaker 1: Oh yes, oh absolutely.  Without a doubt.  I mean, I'm not saying there's no shortcomings, but in the interactions I've had with him, yeah.  He's also willing to take, like, who knows what he would do with Waymo.  I mean, he's also out there, like, far more out there than I am.  

Speaker 0: Yeah, there's big risks.  What do you make of him?  I was going to talk to him on this podcast and I was going back and forth.  I'm such a gullible, naive human.  Like, I see the best in people.  And I slowly started to realize that there might be some people out there that like have multiple faces to the world.  They're like deceiving and dishonest.  I still refuse to like, I just, I trust people and I don't care if I get hurt by it.  But like, you know, sometimes you have to be a little bit careful, especially platform wise and podcast wise.  What do you, what am I supposed to think?  So you think, you think he's a good person?  

Speaker 1: Oh, I don't know.  I don't really make moral judgments.  And it's difficult to- I mean this about the Waymo.  Actually, I mean that whole idea very non-ironically about what I would do.  The problem with putting me in charge of Waymo is Waymo is already ten billion dollars in the hole, right?  Whatever idea Waymo does, look, comm is profitable, comm has raised eight point one million dollars.  That's small, you know, that's small money.  Like I can build a reasonable consumer electronics company and succeed wildly at that and still never be able to pay back Waymo's ten billion.  

Speaker 0: So I think the basic idea with Waymo, well forget the ten billion because they have some backing, but your basic thing is like what can we do to start making some money?  

Speaker 1: Well no, I mean my bigger idea is like whatever the idea is that's going to save Waymo, I don't have it.  It's going to have to be a big risk idea and I cannot think of a better person than Anthony Lewandowski to do it.  So that is completely what I would do as CEO of Waymo.  I would call myself a transitionary CEO, do everything I can to fix that situation up.  Cause I can't, I can't do it, right?  Like I can't, I can't.  I mean, I can talk about how, what I really want to do is just apologize for all those corny, you know, ad campaigns and be like, here's the real state of the technology.  

Speaker 0: Like I have several criticism.  I'm a little bit more bullish on Waymo than you seem to be.  But one criticism I have is it went into corny mode too early.  Like it's still a startup.  It hasn't delivered on anything.  So it should be like more renegade.  and show off the engineering that they're doing, which can be impressive, as opposed to doing these weird commercials of your friendly car company.  

Speaker 1: My biggest snipe at Waymo was always, that guy's a paid actor.  That guy's not a Waymo user, he's a paid actor.  Look here, I found his call sheet.  

Speaker 0: Do kind of like what SpaceX is doing with the rocket launches.  Just put the nerds up front, put the engineers up front, and just show failures, too.  

Speaker 1: I love SpaceX's, yeah.  

Speaker 0: Yeah, the thing they're doing is right.  It just feels like the right.  

Speaker 1: We're all so excited to see them succeed.  

Speaker 0: Yeah.  

Speaker 1: I can't wait to see Waymo fail.  You lie to me, I want you to fail.  You tell me the truth, you be honest with me, I want you to succeed.  Yeah.  

Speaker 0: Yeah, and that requires the renegade CEO, right?  I'm with you.  I'm with you.  I still have a little bit of faith in Waymo for the renegade CEO to step forward, but...  

Speaker 1: It's not.  It's not John Krafcik.  

Speaker 0: Yeah, it's... You can't...  

Speaker 1: It's not Chris Olmstead.  And those people may be very good at certain things, but they're not renegades.  

Speaker 0: Because these companies are fundamentally, even though we're talking about billion dollars, all these crazy numbers, they're still like early stage startups.  

Speaker 1: I mean, if you are pre-revenue and you've raised ten billion dollars, I have no idea.  Like, this just doesn't work.  It's against everything.  Silicon Valley.  Where's your minimum viable product?  Where's your users?  What's your growth numbers?  This is traditional Silicon Valley.  Why do you not apply it to what you think you're too big to fail already?  

Speaker 0: How do you think autonomous driving will change society?  So the mission is, comma, to solve self-driving.  Do you have like a vision of the world of how it'll be different?  Is it as simple as A to B transportation?  Or is there like, because these are robots.  

Speaker 1: It's not about autonomous driving in and of itself.  It's what the technology enables.  I think it's the coolest applied AI problem.  I like it because it has a clear path to monetary value.  But as far as that being the thing that changes the world, I mean, no.  Like, there's cute things we're doing in common.  Like, who'd have thought you could stick a phone on the windshield and it'll drive?  But like, really, the product that you're building is not something that people were not capable of imagining fifty years ago.  So no, it doesn't change the world on that front.  Could people have imagined the internet of years ago?  Only true genius visionaries.  Everyone could have imagined autonomous cars of years ago.  It's like a car, but I don't drive it.  

Speaker 0: See, I have this sense.  And I told you, my long-term dream is robots with whom you have deep connections.  And there's different trajectories towards that.  And I've been thinking of launching a startup.  I see autonomous vehicles as a potential trajectory to that.  That's not where the direction I would like to go.  But I also see Tesla or even common AI pivoting into robotics broadly defined at some stage in the way, like you're mentioning, the internet didn't expect.  

Speaker 1: Let's solve, when I say a comma about this, we could talk about this, but let's solve self-driving cars first.  got to stay focused on the mission.  Don't, don't, don't, you're not too big to fail.  For however much I think calm is winning.  Like, no, no, no, no, no.  You're winning when you solve level five self-driving cars.  And until then you haven't win and won.  And you know, again, you want to be arrogant in the face of other people.  Great.  You want to be arrogant in the face of nature.  You're an idiot.  Right.  

Speaker 0: Stay mission focused, brilliantly put.  Like I mentioned, thinking of launching a startup, I've been considering actually before COVID, I've been thinking of moving to San Francisco.  

Speaker 1: Oh, I wouldn't go there.  

Speaker 0: And now I'm thinking about potentially Austin.  And we're in San Diego now.  

Speaker 1: San Diego, come here.  

Speaker 0: I mean, you're such an interesting human.  You've launched so many successful things.  Why San Diego?  What do you recommend?  Why not San Francisco?  Have you thought, so in your case, San Diego with Qualcomm and Snapdragon, I mean, that's an amazing combination, but- That wasn't really why.  That wasn't the why?  

Speaker 1: No, I mean, Qualcomm was an afterthought.  Qualcomm was, it was a nice thing to think about.  It's like, you can have a tech company here, a good one.  I mean, you know, I like Qualcomm, but no.  

Speaker 0: Well, so why San Diego better than San Francisco?  Why does San Francisco suck?  

Speaker 1: Well, so, okay, so first off, we all kind of said, like, we want to stay in California.  People like the ocean.  You know, California, for its flaws, it's like, a lot of the flaws of California are not necessarily California as a whole, and they're much more San Francisco-specific.  

Speaker 0: Yeah.  

Speaker 1: San Francisco, so I think first-tier cities in general have stopped wanting growth.  Well, you have, like, in San Francisco, you know, the voting class always votes to not build more houses because they own all the houses, and they're like, well, you know, once people have figured out how to vote themselves more money, they're going to do it.  It is so insanely corrupt.  

Speaker 0: It is not balanced at all, like political party-wise, you know, it's a one-party city and- For all the discussion of diversity, it stops lacking real diversity of thought, of background, of approaches, of strategies, of ideas.  It's kind of a strange place that it's the loudest people about diversity and the biggest lack of diversity.  

Speaker 1: Well, I mean, that's what they say, right?  It's the projection.  

Speaker 0: Projection, yeah.  Yeah, it's interesting.  And even people in Silicon Valley tell me that's like high up people, everybody is like, this is a terrible place.  It doesn't make sense.  

Speaker 1: I mean, and coronavirus is really what killed it.  San Francisco was the number one exodus during coronavirus.  

Speaker 0: We still think San Diego is a good place to be.  Yeah.  

Speaker 1: Yeah.  I mean, we'll see.  We'll see what happens with California a bit longer term.  Austin's an interesting choice.  I don't have really anything bad to say about Austin either except for the extreme heat in the summer, but that's very on the surface, right?  I think as far as an ecosystem goes, it's cool.  I personally love Colorado.  

Speaker 0: Colorado's great.  

Speaker 1: I mean, you have these states that are just way better run.  California, especially San Francisco, it's on its high horse.  Yeah.  

Speaker 0: Can I ask you for advice to me and to others about what's it take to build a successful startup?  

Speaker 1: I don't know.  I haven't done that.  Talk to someone who did that.  

Speaker 0: Well, this is like another book of yours that I'll buy for sixty-seven dollars, I suppose.  So there's...  

Speaker 1: One of these days I'll sell out.  Yeah, that's right.  Jail breaks are going to be a dollar and books are going to be sixty-seven.  

Speaker 0: How I jailbroke the iPhone by George Hotz.  

Speaker 1: That's right.  How I jailbroke the iPhone, and you can too, by George Hotz.  

Speaker 0: In twenty-one days.  That's right, that's right.  Oh God, okay, I can't wait.  So you have an introspective, you have built a very unique company.  I mean, not you, but you and others.  but I don't know, there's nothing, you have an interest but you haven't really sat down and thought about like, well like if you and I, we're having a bunch of, we're having some beers and you're seeing that I'm depressed and whatever, I'm struggling, there's no advice you can give?  

Speaker 1: Oh, I mean...  

Speaker 0: More beer?  

Speaker 1: More beer.  Yeah, I think it's all very, like, situation-dependent.  Here's... Okay, if I can give a generic piece of advice, it's the technology always wins.  The better technology always wins, and lying always loses.  Build technology and don't lie.  

Speaker 0: I'm with you.  I agree very much.  

Speaker 1: The long run.  Long run.  

Speaker 0: Sure.  It's the long run.  

Speaker 1: And you know what?  The market can remain irrational longer than you can remain solid.  

Speaker 0: True fact.  Well, this is an interesting point because I ethically and just as a human believe that hype and smoke and mirrors is not at any stage of the company is a good strategy.  I mean, there's some like, you know, PR magic kind of like, you know.  You want a new product, right?  

Speaker 1: If there's a call to action, if there's like a call to action, like buy my new GPU, look at it.  It takes up three slots and it's this big.  It's huge.  Buy my GPU.  Yeah, that's great.  

Speaker 0: If you look at, you know, especially in that, in the AI space broadly, but autonomous vehicles, like you can raise a huge amount of money on nothing.  And the question to me is like, I'm against that.  I'll never be part of that, I don't think.  I hope not.  Willingly not.  But is there something to be said to essentially lying?  to raise money, like fake it till you make it kind of thing?  

Speaker 1: I mean, just as Billy McFarland and the Fyre Festival, we all experienced what happens with that.  No, no, don't fake it till you make it.  Be honest and hope you make it, the whole way.  

Speaker 0: The technology wins.  

Speaker 1: Right, the technology wins.  And there is, I'm not, I usually like to anti-hype, that's a Slava KPSS reference, but, Hype isn't necessarily bad.  I loved camping out for the iPhones.  And as long as the hype is backed by substance, as long as it's backed by something I can actually buy and it's real, then hype is great and it's a great feeling.  It's when the hype is backed by lies that it's a bad feeling.  

Speaker 0: I mean, a lot of people call Elon Musk a fraud.  

Speaker 1: How could he be a fraud?  

Speaker 0: I've noticed this kind of interesting effect, which is, He does tend to over promise and deliver.  What's the better way to phrase it?  Promise a timeline that he doesn't deliver on, he delivers much later on.  What do you think about that?  Because I do that.  I think that's a programmer thing too.  I do that as well.  You think that's a really bad thing to do or is that okay?  

Speaker 1: Again, as long as you're working toward it and you're going to deliver on it, it's not too far off.  You know, the whole autonomous vehicle thing, it's like, I mean, I still think Tesla's on track to beat us.  I still think even with their missteps, they have advantages we don't have.  Elon is better than me at like, marshalling massive amounts of resources.  So I still think, given the fact they're maybe making some wrong decisions, they'll end up winning.  And it's fine to hype it if you're actually going to win, right?  If Elon says, look, we're going to be landing rockets back on Earth in a year and it takes four, he landed a rocket back on earth.  And he was working toward it the whole time.  I think there's some amount of like, I think when it becomes wrong is if you know you're not gonna meet that deadline.  If you're lying.  

Speaker 0: Yeah, that's brilliantly put.  Like this is what people don't understand, I think.  Like Elon believes everything he says.  

Speaker 1: He does.  As far as I can tell, he does.  

Speaker 0: And I detected that in myself too.  Like if I, it's only bullshit if you're like conscious of yourself lying.  

Speaker 1: Yeah, I think so.  

Speaker 0: Yeah.  

Speaker 1: Now, you can't take that to such an extreme, right?  Like, in a way, I think maybe Billy McFarland believed everything he said, too.  

Speaker 0: Right, that's how you start a cult, and then everybody kills themselves, yeah.  Yeah,  

Speaker 1: like it's, you need, if there's like some factor on it, it's fine, and you need some people to like, you know, keep you in check, but like, if you deliver on most of the things you say, and just the timelines are off,  

Speaker 0: It does piss people off though.  I wonder, but who cares?  In a long arc of history, the people, everybody gets pissed off at the people who succeed, which is one of the things that frustrates me about this world is they don't celebrate the success of others.  Like there's so many people that want Elon to fail.  It's so fascinating to me.  Like, what is wrong with you?  Like, so Elon Musk talks about like people short, like they talk about financial, but I think it's much bigger than the financials.  I've seen like the human factors community.  They want, they want other people to fail.  Why, why, why?  Like even people, the harshest thing is like, you know, even people that like seem to really hate Donald Trump, they want him to fail or like the other president or they want Barack Obama to fail.  

Speaker 1: It's like, We're all on the same boat, man.  

Speaker 0: It's weird, but I would love to inspire that part of the world to change because, damn it, if the human species is going to survive, we should celebrate success.  It seems like the efficient thing to do in this objective function that we're all striving for is to celebrate the ones that figure out how to do better at that objective function, as opposed to dragging them down back into the mud.  

Speaker 1: I think there is, this is the speech I always give about the commenters on Hacker News.  So first off, something to remember about the internet in general is commenters are not representative of the population.  I don't comment on anything.  Commenters are representative of a certain sliver of the population.  And on Hacker News, a common thing I'll see is when you'll see something that's like, promises to be wild out there and innovative.  There is some amount of, you know, checking them back to earth, but there's also some amount of, if this thing succeeds, well, I'm thirty-six and I've worked at large tech companies my whole life.  They can't succeed.  Because if they succeed, that would mean that I could have done something different with my life.  But we know that I couldn't have.  We know that I couldn't have.  And that's why they're going to fail.  And they have to root for them to fail, to kind of maintain their world image.  

Speaker 0: And they comment, well, it's hard.  So one of the things I'm considering, startup wise, is to change that.  Because I think it's also a technology problem.  It's a platform problem.  I agree.  It's like, because the thing you said most people don't comment.  I think most people want to comment.  They just don't because it's all the assholes who are commenting.  

Speaker 1: I don't want to be grouped in with them.  

Speaker 0: You don't want to be at a party where everyone is an asshole.  But that's a platform's problem.  

Speaker 1: I can't believe what Reddit's become.  I can't believe the groupthink in Reddit comments.  

Speaker 0: There's a, Reddit is an interesting one because they're subreddits.  And so you can still see, especially small subreddits, that are little havens of joy and positivity and deep, even disagreement, but nuanced discussion.  But it's only small little pockets.  But that's emergent.  The platform is not helping that or hurting that.  So I guess naturally, something about the internet, if you don't put in a lot of effort to encourage nuance and positive, good vibes, it's naturally going to decline into chaos.  

Speaker 1: I would love to see someone do this.  well.  

Speaker 0: Yeah.  

Speaker 1: I think it's, yeah, very doable.  

Speaker 0: I think actually, so I feel like Twitter could be overthrown.  

Speaker 1: Joshua Bach talked about how if you have like and retweet, that's only positive wiring.  The only way to do anything negative there is with a comment.  And that asymmetry is what gives Twitter its particular toxicness.  Whereas I find YouTube comments to be much better.  Because YouTube comments have an up and a down, and they don't show the downvotes.  

Speaker 0: Without getting into depth of this particular discussion, the point is to explore possibilities and get a lot of data on it.  Because, I mean, I could disagree with what you just said.  The point is it's unclear.  It hasn't been explored in a really rich way.  Like these questions of how to create platforms that encourage positivity.  Yeah, I think it's a technology problem.  And I think we'll look back at Twitter as it is now.  Maybe it'll happen within Twitter, but most likely somebody overthrows them.  We'll look back at Twitter and say, can't believe we put up with this level of toxicity.  

Speaker 1: You need a different business model, too.  Any social network that fundamentally has advertising as a business model, this was in The Social Dilemma, which I didn't watch, but I liked it.  It's like, there's always the, you're the product, you're not the.  But they had a nuanced take on it that I really liked, and it said, the product being sold is influence over you.  The product being sold is literally your influence on you.  That can't be.  If that's your idea, okay, well, guess what?  It cannot be toxic.  

Speaker 0: Yeah.  Maybe there's ways to spin it, like with giving a lot more control to the user and transparency to see what is happening to them as opposed to in the shadows.  It's possible, but that can't be the primary source of- But the users aren't.  

Speaker 1: No one's going to use that.  

Speaker 0: It depends.  It depends.  It depends.  

Speaker 1: I think that you can't depend on self-awareness of the users.  

Speaker 0: It's a longer discussion because you can't depend on it, but you can reward self-awareness.  If for the ones who are willing to put in the work of self-awareness, you can reward them and incentivize and perhaps be pleasantly surprised how many people are willing to be self-aware on the internet.  We are in real life.  I'm putting in a lot of effort with you right now, being self-aware about if I say something stupid or mean, I'll look at your body language.  I'm putting in that effort.  It's costly.  For an introvert, it's very costly.  But on the internet, Fuck it.  Most people are like, I don't care if this hurts somebody.  I don't care if this is not interesting or if this is mean or whatever.  

Speaker 1: I think so much of the engagement today on the internet is so disingenuine too.  You're not doing this out of a genuine, this is what you think.  You're doing this just straight up to manipulate others.  You just became an ad.  

Speaker 0: Okay, let's talk about a fun topic, which is programming.  Here's another book idea for you, let me pitch.  What's your perfect programming setup?  So like, this by George Hotz.  So like, what, listen, you're-  

Speaker 1: Give me a MacBook Air, sit me in a corner of a hotel room, and you know, I'll still  

Speaker 0: have- So you really don't care, you don't fetishize like multiple monitors, keyboard,  

Speaker 1: Those things are nice and I'm not going to say no to them, but did they automatically unlock tons of productivity?  No, not at all.  I have definitely been more productive on a MacBook Air in a corner of a hotel room.  

Speaker 0: What about IDE?  So which operating system do you love?  What text editor do you use, IDE?  Is there something that is like the perfect, if you could just say the perfect productivity setup for George Hotz.  Doesn't matter.  

Speaker 1: Literally doesn't matter.  You know, I guess I code most of the time in Vim.  Like literally I'm using an editor from the seventies, you know, you didn't make anything better.  Okay, VS Code is nice for reading code.  There's a few things that are nice about it.  I think that there you can build much better tools.  How like IDA's XREFs work way better than VS Codes, why?  

Speaker 0: Yeah, actually, that's a good question.  Like why?  I still use, sorry, Emacs for most.  I've actually never, I have to confess something dark.  So I've never used BIM.  I think maybe I'm just afraid that my life has been like a waste.  I'm not evangelical about Emacs.  

Speaker 1: This is how I feel about TensorFlow versus PyTorch.  Having just like, we've switched everything to PyTorch now, put months into the switch.  I have felt like I've wasted years on TensorFlow.  I can't believe it.  I can't believe how much better PyTorch is.  I've used Emacs and Vim, doesn't matter.  

Speaker 0: I still, just my heart.  somehow, I fell in love with Lisp.  I don't know why.  You can't, the heart wants what the heart wants.  I don't understand it, but it just connected with me.  Maybe it's the functional language at first that I connected with.  Maybe it's because so many of the AI courses before the deep learning revolution were taught with Lisp in mind.  I don't know.  I don't know what it is, but I'm stuck with it.  But at the same time, like, why am I not using a modern ID for some of these programming?  I don't know.  

Speaker 1: They're not that much better.  I've used modern IDs too.  

Speaker 0: But at the same time, not to disagree with you, but I like multiple monitors.  I have to do work on a laptop, and it's a pain in the ass.  And also, I'm addicted to the Kinesis weird keyboard that you can see there.  Yeah, so you don't have any of that.  You can just be on a MacBook.  

Speaker 1: I mean, look at work.  I have three to four inch monitors.  I have a happy hacking keyboard.  I have a Razer DeathAdder mouse.  

Speaker 0: but it's not a central fear.  Let's go to a day in the life of George Hotz.  What is the perfect day productivity-wise?  So we're not talking about like Hunter S. Thompson drugs.  And let's look at productivity.  Like what's the day look like?  on like hour by hour?  Is there any regularities that create a magical George Hotz experience?  

Speaker 1: I can remember three days in my life, and I remember these days vividly, when I've gone through kind of radical transformations to the way I think.  And what I would give, I would pay a hundred thousand dollars if I could have one of these days tomorrow.  The days have been so impactful.  And one was first discovering Eliezer Yudkowsky on The Singularity and reading that stuff.  And like, you know, my mind was blown.  The next was discovering the Hutter Prize and that AI is just compression.  like finally understanding AIXI and what all of that was.  I like read about it when I was at the age, I didn't understand it.  And then the fact that like lossless compression implies intelligence, the day that I was shown that.  And then the third one is controversial, the day I found a blog called Unqualified Reservations and read that and I was like.  Wait, which one is that?  What's the guy's name?  Curtis Yarvin.  

Speaker 0: Yeah, so many people tell me I'm supposed to talk to him.  He sounds insane or brilliant, but insane or both, I don't know.  The day I found that blog  

Speaker 1: was another like, this was during like  

Speaker 0: Gamergate and kind of the run up to the the the the the the the the the the the the the the the the the the the the the the the the the the the  

Speaker 1: the the the the the the the the the the the the  

Speaker 0: the the the the the the the the the the the the the the the the the the the the  

Speaker 1: the the the the the the  

Speaker 0: the the the the the the the the the the the the the the the the the the the the  

Speaker 1: the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the the.  wow, okay, the world makes sense now.  I had a framework now to interpret this, just like I got the framework for AI and a framework to interpret technological progress, like those days when I discovered these new frameworks were.  

Speaker 0: Oh, interesting, so it's not about, but what was special about those days?  How did those days come to be?  Is it just you got lucky?  Sure.  You just encountered a Hutter Prize on Hacker News or something like that?  

Speaker 1: But you see, I don't think it's just, see, I don't think it's just that like I could have gotten lucky at any point.  

Speaker 0: I think that in a way- You were ready at that moment.  

Speaker 1: Yeah, exactly.  

Speaker 0: To receive the information.  But is there some magic to the day today of like eating breakfast and it's the mundane things?  

Speaker 1: Nah.  

Speaker 0: Nothing.  

Speaker 1: Nah, I drift through life.  

Speaker 0: Without structure.  

Speaker 1: I drift through life hoping and praying that I will get another day like those days.  

Speaker 0: And there's nothing in particular you do to be a receptacle for day number four?  

Speaker 1: No, I didn't do anything to get the other ones, so I don't think I have to really do anything now.  I took a month-long trip to New York, and the Ethereum thing was the highlight of it, but the rest of it was pretty terrible.  I did a two-week road trip, and I got.  I had to turn around, I had to turn around.  I'm driving in Gunnison, Colorado.  I passed through Gunnison, and the snow starts coming down.  There's a pass up there called Monarch Pass.  In order to get through to Denver, you gotta get over the Rockies.  And I had to turn my car around.  I couldn't, I watched F-one-fifty go off the road.  I'm like, I gotta go back.  And that day was meaningful, because it was real.  I actually had to turn my car around.  It's rare that anything even real happens in my life.  Even as, you know, mundane as the fact that, yeah, there was snow, I had to turn around, stay in Gunnison, and leave the next day.  

Speaker 0: Something about that moment felt real.  Okay, so, actually, it's interesting to break apart the three moments you mentioned, if it's okay.  So, I always have trouble pronouncing his name, but Alowser-Yurkowski.  Yeah.  So what... How did your worldview change in starting to consider the exponential growth of AI and AGI that he thinks about and the threats of artificial intelligence and all that kind of ideas?  Can you maybe break apart what exactly was so magical to you as a transformational experience?  

Speaker 1: Today, everyone knows him for threats and AI safety.  This was pre that stuff.  There was, I don't think, a mention of AI safety on the page.  This is old Yukowsky stuff.  He'd probably denounce it all now.  He'd probably be like, that's exactly what I didn't want to happen.  Sorry, man.  

Speaker 0: Is there something specific you can take from his work that you can remember?  

Speaker 1: Yeah.  It was this realization that Computers double in power every eighteen months and humans do not.  And they haven't crossed yet, but if you have one thing that's doubling every eighteen months and one thing that's staying like this, you know, here's your log graph, here's your line, you know, you calculate that.  

Speaker 0: And that, did that open the door to the exponential thinking?  Like thinking that like, you know what, with technology we can actually transform the world.  

Speaker 1: It opened the door to human obsolescence.  It opened the door to realize that in my lifetime, humans are going to be replaced.  

Speaker 0: And then the matching idea to that of artificial intelligence with the Hutter Prize.  You know, I'm torn, I go back and forth on what I think about it.  But the basic thesis is, it's a nice compelling notion that we can reduce the task of creating an intelligent system, a generally intelligent system, into the task of compression.  So you can think of all of intelligence in the universe, in fact, as a kind of compression.  Do you find that, was that just at the time you found that as a compelling idea, or do you still find that a compelling idea?  

Speaker 1: I still find that a compelling idea.  I think that it's not that useful day to day, but actually one of maybe my quests before that was a search for the definition of the word intelligence.  And I never had one.  And I definitely have a definition of the word compression.  It's a very simple, straightforward one.  And you know what compression is.  You know what lossless is.  Lossless compression, not lossy.  Lossless compression.  And that that is equivalent to intelligence, which I believe.  I'm not sure how useful that definition is day to day, but like I now have a framework to understand what it is.  

Speaker 0: And he just Tenexed the prize for that competition, like recently, a few months ago.  You ever thought of taking a crack at that?  

Speaker 1: Oh, I did.  Oh, I did.  I spent the next, after I found the prize, I spent the next six months of my life trying it, and well, that's when I started learning everything about AI, and then I worked at Vicarious for a bit, and then I read all the deep learning stuff, and I'm like, okay, now I'm caught up to modern AI.  wow and i had i had a really good framework to put it all in from the compression stuff right like some of the first.  some of the first deep learning models i played with were uh gtt gpt basically but before transformers before it was still uh rnns to to do uh character prediction.  

Speaker 0: But by the way, on the compression side, especially neural networks, what do you make of the lossless requirement with the Hutter Prize?  Human intelligence and neural networks can probably compress stuff pretty well, but it would be lossy.  It's imperfect.  

Speaker 1: you can turn a lossy compressor into a lossless compressor pretty easily using an arithmetic encoder, right?  You can take an arithmetic encoder and you can just encode the noise with maximum efficiency, right?  So even if you can't predict exactly what the next character is, the better a probability distribution.  you can put over the next character, you can then use an arithmetic encoder to, right, you don't have to know whether it's an E or an I, you just have to put good probabilities on them and then, you know, code those.  And if you have, it's a bits of entropy thing, right?  

Speaker 0: So let me, on that topic, it'd be interesting as a little side tour, what are your thoughts in this year about GPT-III and these language models and these transformers?  Is there something interesting to you as an AI researcher, or is there something interesting to you as an autonomous vehicle developer?  

Speaker 1: Nah, I think it's overhyped.  I mean, it's not.  Like, it's cool.  It's cool for what it is, but no, we're not just going to be able to scale up to GPG-XII and get general purpose intelligence.  Like, your loss function is literally just, you know, cross-entropy loss on the character, right?  Like, that's not the loss function of general intelligence.  

Speaker 0: Is that obvious to you?  Yes.  Can you imagine that to play devil's advocate on yourself, is it possible that the GPT-XII will achieve general intelligence with something as dumb as this kind of loss function?  

Speaker 1: I guess it depends what you mean by general intelligence.  So there's another problem with the GPTs, and that's that they don't have long-term memory.  

Speaker 0: Right.  All right.  

Speaker 1: So like just GPT-XII, a scaled up version of GPT-XII or III, I find it hard to believe.  

Speaker 0: Well, you can scale it in.  So it's a hard-coded length, but you can make it wider and wider and wider.  Yeah.  

Speaker 1: You're going to get cool things from those systems.  I don't think you're ever gonna get something that can like, you know, build me a rocket ship.  

Speaker 0: What about soft driving?  So, you know, you can use transformer with video, for example.  You think, is there something in there?  

Speaker 1: No, because, I mean, look, we use a GRU.  We use a GRU, we could change that GRU out to a transformer.  I think driving is much more Markovian than language.  

Speaker 0: So Markovian, you mean like the memory, which aspect of Markov chains?  

Speaker 1: Markovian, I mean that like most of the information in the state at T minus one is also in state T. I see, yeah.  Right, and it kind of like drops off nicely like this, whereas sometime with language, you have to refer back to the third paragraph on the second page.  I feel like there's not many, like you can say like speed limit signs, but there's really not many things in autonomous driving that look like that.  

Speaker 0: But if we look at to play devil's advocate is the risk estimation thing that you've talked about is kind of interesting.  It feels like there might be some longer term aggregation of context necessary to be able to figure out like the context.  I'm not even sure I'm believing my devil's advocate.  

Speaker 1: We have a nice like vision model which outputs like a one or two four dimensional perception space.  Can I try transformers on it?  Sure, I probably will.  At some point we'll try transformers and then we'll just see.  Do they do better?  Sure.  

Speaker 0: But it might not be a game changer you're saying.  

Speaker 1: Well, I'm not.  Might transformers work better than grooves for autonomous driving?  Sure.  Might we switch?  Sure.  Is this some radical change?  No.  OK, we switch from RNNs to grooves.  OK, maybe it's grooves to transformers.  But no, it's not.  

Speaker 0: Yeah.  Well, on the topic of general intelligence, I don't know how much I've talked to you about it.  Do you think we'll actually build an AGI?  If you look at Ray Kurzweil with Singularity, do you have an intuition about?  You're kind of saying driving is easy.  I tend to personally believe that solving driving will have really deep, important impacts on our ability to solve general intelligence.  I think driving doesn't require general intelligence.  but I think they're going to be neighbors in a way that it's deeply tied.  Driving is so deeply connected to the human experience that I think solving one will help solve the other.  I don't see driving as easy and almost separate than general intelligence.  But what's your vision of a future with a singularity?  Do you see there'll be a single moment, like a singularity, where it'll be a phase shift?  Are we in the singularity now?  Do you have crazy ideas about the future in terms of AGI?  

Speaker 1: We're definitely in the singularity now.  

Speaker 0: We are?  

Speaker 1: Of course, of course.  Look at the bandwidth between people.  The bandwidth between people goes up.  The singularity is just when the bandwidth...  

Speaker 0: What do you mean by the bandwidth?  

Speaker 1: Communications, tools, the whole world is networked.  The whole world is networked and we raise the speed of that network, right?  

Speaker 0: Oh, so you think the communication of information in a distributed way is an empowering thing for collective intelligence?  

Speaker 1: Oh, I didn't say it's necessarily a good thing, but I think that's like, when I think of the definition of the singularity, yeah, it seems kind of right.  

Speaker 0: Oh, I see.  It's a change in the world beyond which the world would be transformed in ways that we can't possibly imagine.  

Speaker 1: No, I mean, I think we're in the singularity now in the sense that there's one world and a monoculture and it's also linked.  

Speaker 0: I mean, I kind of share the intuition that the singularity will originate from the collective intelligence of us ants versus the like some single system AGI type thing.  

Speaker 1: Oh, I totally agree with that.  Yeah, I don't really believe in like a hard takeoff AGI kind of thing.  Yeah, I don't even think AI is all that different in kind from what we've already been building.  With respect to driving, I think driving is a subset of general intelligence, and I think it's a pretty complete subset.  I think the tools we develop at Kama will also be extremely helpful to solving general intelligence, and that's, I think, the real reason why I'm doing it.  I don't care about self-driving cars.  It's a cool problem to beat people at.  

Speaker 0: But I mean, yeah, you're kind of you're of two minds.  So one, you do have to have a mission and you want to focus and make sure you get you get there.  You can't forget that.  But at the same time, there is a thread that's much bigger than that connects the entirety of your effort.  That's much bigger than just driving.  

Speaker 1: With AI and with general intelligence, it is so easy to delude yourself into thinking you've figured something out when you haven't.  If we build a level five self-driving car, we have indisputably built something.  Is it general intelligence?  I'm not going to debate that.  I will say we've built something that provides huge financial value.  

Speaker 0: Yeah.  Beautifully put.  That's the engineering credo.  Like just, just build the thing.  It's like, uh, that's why I'm with, uh, with, uh, with, with the on, on, uh, go to Mars.  Yeah.  

Speaker 1: It's a great one.  

Speaker 0: You can argue like who the hell cares about going to Mars?  But the reality is set that as a mission, get it done.  And then you're going to crack some pro problem that you've never even expected in the process of doing that.  Yeah.  

Speaker 1: Yeah, I mean, I think if I had a choice between humanity going to Mars and solving self-driving cars, I think going to Mars is better.  But I don't know.  I'm more suited for self-driving cars.  I'm an information guy.  I'm not a modernist.  I'm a postmodernist.  

Speaker 0: Postmodernist.  All right.  Beautifully put.  Let me drag you back to programming for a sec.  What three, maybe three to five programming languages should people learn, do you think?  Like, if you look at yourself, what did you get the most out of from learning?  

Speaker 1: Well, so everybody should learn C and assembly.  We'll start with those two.  

Speaker 0: Assembly?  

Speaker 1: Yeah.  If you can't code in assembly, you don't know what the computer is doing.  You don't have to be great in assembly, but you have to code in it.  Then you have to appreciate assembly in order to appreciate all the great things C gets you.  Then you have to code in C in order to appreciate all the great things Python gets you.  So I'll just say assembly C in Python, we'll start with those three.  

Speaker 0: The memory allocation of C and the fact that it's an assembly gives you a sense of just how many levels of abstraction you get to work on in modern day programming.  

Speaker 1: Yeah, you get graph coloring for register assignment in compilers.  You know the compiler, your computer only has a certain number of registers, yet you can have all the variables you want in a C function.  

Speaker 0: So you get to start to build intuition about compilation, like what a compiler gets you.  What else?  

Speaker 1: Well, then there's kind of a, so those are all very imperative programming languages.  Then there's two other paradigms for programming that everybody should be familiar with.  One of them is functional.  You should learn Haskell and take that all the way through, learn a language with dependent types like Coq, learn that whole space, like the very PL theory heavy languages.  

Speaker 0: And Haskell is your favorite functional?  Is that the go-to, you'd say?  

Speaker 1: Yeah, I'm not a great Haskell programmer.  I wrote a compiler in Haskell once.  There's another paradigm.  And actually, there's one more paradigm that I'll even talk about after that that I never used to talk about when I would think about this.  But the next paradigm is learn Verilog or VHDL.  Understand this idea of all of the instructions execute at once.  If I have a block in Verilog and I write stuff in it, it's not sequential.  They all execute at once.  And then, like, think like that.  That's how hardware works.  

Speaker 0: So I guess assembly doesn't quite get you that.  Assembly is more about compilation, and Verilog is more about the hardware, like giving a sense of what actually the hardware is doing.  

Speaker 1: Assembly, C, Python are straight, like they sit right on top of each other.  In fact, C is, well, C is kind of coded in C, but you could imagine the first C was coded in assembly, and Python is actually coded in C. So, you know, you can straight up go on that.  

Speaker 0: Got it, and then Verilog gives you, that's brilliant, okay.  

Speaker 1: And then, I think there's another one now, everyone should, Karpathy calls it programming two point O, which is learn a, I'm not even gonna, don't learn TensorFlow, learn PyTorch.  

Speaker 0: So machine learning, we gotta come up with a better term than programming two point O or, but yeah.  

Speaker 1: It's a programming language, learning.  

Speaker 0: I wonder if it can be formalized a little bit better.  It feels like we're in the early days of what that actually entails.  

Speaker 1: Data-driven programming?  

Speaker 0: Data-driven programming, yeah.  But it's so fundamentally different as a paradigm than the others.  Like it almost requires a different skill set.  But you think it's still, yeah.  And PyTorch versus TensorFlow, PyTorch wins.  

Speaker 1: It's the fourth paradigm.  It's the fourth paradigm that I've kind of seen.  There's like this, you know, imperative functional hardware.  I don't know a better word for it.  And then ML.  

Speaker 0: Do you have advice?  For people that want to, you know, get into programming, want to learn programming, you have a video.  What is programming?  Noob lessons, exclamation point.  And I think the top comment is like, warning, this is not for noobs.  Do you have a noob, like a TLDW for that video, but also a noob-friendly advice on how to get into programming?  

Speaker 1: You are never going to learn programming by watching a video called Learn Programming.  The only way to learn programming, I think, and the only way, everyone I've ever met who can program well learned it all in the same way.  They had something they wanted to do, And then they tried to do it.  And then they were like, oh, well, OK.  This is kind of, you know, it would be nice if the computer could kind of do this thing.  And then, you know, that's how you learn.  You just keep pushing on a project.  So the only advice I have for learning programming is go program.  

Speaker 0: somebody wrote to me a question like, we don't really, they're looking to learn about recurring neural networks.  And he's saying like, my company's thinking of using recurring neural networks for time series data, but we don't really have an idea of where to use it yet.  We just wanna, like do you have any advice on how to learn about, these are these kind of general machine learning questions.  And I think the answer is like, actually you have a problem that you're trying to solve.  

Speaker 1: I see that stuff.  Oh my God, when people talk like that, they're like, I heard machine learning is important.  Could you help us integrate machine learning with macaroni and cheese production?  You just, I don't even, you can't help these people.  Like who lets you run anything?  Who lets that kind of person run anything?  

Speaker 0: I think we're all beginners at some point, so.  

Speaker 1: It's not like they're a beginner.  It's like, my problem is not that they don't know about machine learning.  My problem is that they think that machine learning has something to say about macaroni and cheese production.  Or like, I heard about this new technology, how can I use it for why?  Like, I don't know what it is, but how can I use it for why?  

Speaker 0: That's true.  And you have to build up an intuition of how, because you might be able to figure out a way, but like the prerequisites, you should have a macaroni and cheese problem to solve first.  

Speaker 1: Exactly.  

Speaker 0: And then two, you should have more traditional, like the learning process should involve more traditionally applicable problems in the space of whatever that is, of machine learning, and then see if it can be applied to macroteach.  

Speaker 1: At least start with, tell me about a problem.  Like if you have a problem, you're like, you know, some of my boxes aren't getting enough macaroni in them.  Can we use machine learning to solve this problem?  That's much, much better than, how do I apply machine learning to macaroni and cheese?  

Speaker 0: One big thing, maybe this is me talking to the audience a little bit, because I get, these days, so many messages, advice on how to learn stuff.  This is not me being mean.  I think this is quite profound, actually, is you should Google it.  

Speaker 1: Oh, yeah.  

Speaker 0: One of the skills that you should really acquire as an engineer, as a researcher, as a thinker, there's two complementary skills.  One is with a blank sheet of paper with no internet to think deeply.  And then the other is to Google the crap out of the questions you have.  Like that's actually a skill people often talk about, but like doing research, like pulling at the thread and like looking up different words, going into like GitHub repositories with two stars and like looking how they did stuff, like looking at the code or going on Twitter, seeing like there's little pockets of brilliant people that are like having discussions.  If you're a neuroscientist, go into signal processing community.  If you're an AI person, go into the psychology community.  Switch communities.  Keep searching, searching, searching, because it's so much better to invest in finding somebody else who already solved your problem.  than it is to try to solve the problem.  And because they've often invested years of their life, like entire communities are probably already out there who have tried to solve your problem.  

Speaker 1: I think they're the same thing.  I think you go try to solve the problem.  And then in trying to solve the problem, if you're good at solving problems, you'll stumble upon the person who solved it already.  

Speaker 0: Yeah, but the stumbling is really important.  I think that's a skill that people should really put, especially in undergrad, like search.  If you ask me a question, how should I get started in deep learning, like especially?  Like that is just so Googleable.  Like the whole point is you Google that and you get a million pages and just start looking at them.  Start pulling at the thread, start exploring, start taking notes, start getting advice from a million people that have already like spent their life answering that question actually.  

Speaker 1: Oh, well, yeah, I mean, that's definitely also, yeah, when people ask me things like that, I'm like, trust me, the top answer on Google is much, much better than anything I'm going to tell you, right?  

Speaker 0: Yeah.  People ask, it's an interesting question.  Let me know if you have any recommendations.  What three books, technical or fiction or philosophical, had an impact on your life or you would recommend perhaps?  

Speaker 1: Maybe we'll start with the least controversial, Infinite Jest.  Infinite Jest is a...  

Speaker 0: David Foster Wallace?  

Speaker 1: Yeah, it's a book about wireheading, really.  Very enjoyable to read, very well written.  You will grow as a person reading this book.  its effort, and I'll set that up for the second book, which is pornography.  It's called Atlas Shrugged, which...  

Speaker 0: Atlas Shrugged is pornography?  

Speaker 1: Yeah, I mean, it is.  I will not defend the... I will not say Atlas Shrugged is a well-written book.  It is entertaining to read, certainly, just like pornography.  The production value isn't great.  You know, there's a sixty-page monologue in there that Ayn Rand's editor really wanted to take out, and she paid out of her pocket to keep that sixty-page monologue in the book.  But it is a great book for a kind of framework of human relations.  And I know a lot of people are like, yeah, but it's a terrible framework.  Yeah, but it's a framework.  

Speaker 0: Just for context, in a couple of days I'm speaking with, for probably four plus hours, with Yaron Brook, who's the main living remaining objectivist.  Objectivist.  

Speaker 1: Interesting.  

Speaker 0: So I've always found this philosophy quite interesting on many levels.  One of how repulsive some large percent of the population find it, which is always funny to me when people are unable to even read a philosophy because of some, I think that says more about their psychological perspective on it.  But there is something about objectivism and Ayn Rand's philosophy that's deeply connected to this idea of capitalism, of the ethical life is the productive life, that was always compelling to me.  I didn't seem to interpret it in the negative sense that some people do.  

Speaker 1: To be fair, I read that book when I was nineteen.  

Speaker 0: So you had an impact at that point, yeah.  

Speaker 1: Yeah, and the bad guys in the book have this slogan, from each according to their ability to each according to their need.  And I'm looking at this and I'm like, these are the most, this is Team Rocket level cartoonishness, right?  No bad guy.  And then when I realized that was actually the slogan of the Communist Party, I'm like, wait a second.  Wait, no, no, no, no, no.  You're telling me this really happened?  

Speaker 0: Yeah, it's interesting.  I mean, one of the criticisms of her work is she has a cartoonish view of good and evil, like that.  there's like the.  the reality isn't?  Jordan Peterson says is that each of us have the capacity for good and evil in us, as opposed to like.  there's some characters who are purely evil and some characters that are purely good.  

Speaker 1: And that's in a way why it's pornographic.  

Speaker 0: The production value.  I love it.  

Speaker 1: Well, evil is punished.  And that's very clearly, you know, there's no there's no, you know, just like porn doesn't have, you know, like character growth.  Well, you know, neither does Alice Shrugged, like.  

Speaker 0: Brilliant, well put.  But as a nineteen-year-old George Hotz, it was good enough.  

Speaker 1: Yeah, yeah, yeah, yeah.  

Speaker 0: What's the third?  You have something?  

Speaker 1: I could give, these two I'll just throw out.  They're sci-fi.  Perputation City.  Great thing to start thinking about copies of yourself.  And then- Who's that by?  

Speaker 0: Sorry, I didn't talk.  

Speaker 1: That is Greg Egan.  That might not be his real name, some Australian guy, might not be Australian, I don't know.  And then, this one's online, it's called The Metamorphosis of Prime Intellect.  It's a story set in a post-singularity world, it's interesting.  

Speaker 0: Is there, in either of the worlds, do you find something philosophically interesting in them that you can comment on?  

Speaker 1: I mean, it is clear to me that, Metamorphosis of the Prime Intellect is written by an engineer, which is... It's very almost a pragmatic take on a utopia, in a way.  

Speaker 0: Positive or negative?  

Speaker 1: Well, that's up to you to decide.  reading the book.  And the ending of it is very interesting as well, and I didn't realize what it was.  I first read that when I was fifteen.  I've reread that book several times in my life.  And it's short.  It's fifty pages.  Everyone should go read it.  

Speaker 0: What's, sorry, this is a little tangent.  I've been working through the foundation.  I've been, I haven't read much sci-fi my whole life, and I'm trying to fix that in the last few months.  That's been a little side project.  What's, to you, is the greatest sci-fi novel that people should read?  

Speaker 1: I mean, yeah, I would say like, yeah, Permutation City, Metamorphosis of Prime Intellect.  I don't know, I didn't like Foundation.  I thought it was way too modernist.  

Speaker 0: Do you like Dune and like all of those?  

Speaker 1: I've never read Dune.  You've never read Dune?  I've never read Dune.  I have to read it.  Fire Upon the Deep is interesting.  Okay, I mean, look, everyone should read, everyone should read Neuromancer, everyone should read Snow Crash.  If you haven't read those, like start there.  

Speaker 0: Yeah, I haven't read Snow Crash.  

Speaker 1: You haven't read Snow Crash?  No.  Oh, I mean, it's very entertaining.  Go to Lesher Bach, and if you want the controversial one, Bronze Age Mindset.  

Speaker 0: All right, I'll look into that one.  

Speaker 1: Those aren't sci-fi, but just to round out books.  

Speaker 0: So a bunch of people asked me on Twitter and Reddit and so on for advice.  So what advice would you give a young person today about life?  Yeah, I mean, looking back, especially when you're younger and you continued it, you've accomplished a lot of interesting things.  Is there some advice from those?  in that life of yours that you can pass on?  

Speaker 1: If college ever opens again, I would love to give a graduation speech.  At that point, I will put a lot of somewhat satirical effort into this question.  

Speaker 0: You haven't written anything at this point.  

Speaker 1: Oh, you know what?  Always wear sunscreen.  This is water.  

Speaker 0: I think you're plagiarizing.  

Speaker 1: I mean, you know, but that's the like, well, clean your room.  You know, yeah, you can plagiarize from all of this stuff.  And it's, there is no, self-help books aren't designed to help you, they're designed to make you feel good.  Like whatever advice I could give, you already know.  Everyone already knows.  Sorry, it doesn't feel good.  Right?  Like, you know?  You know?  If I tell you that you should, you know, eat well and read more, it's not gonna do anything.  I think the whole genre of those kind of questions is meaningless.  

Speaker 0: I don't know.  

Speaker 1: If anything, it's don't worry so much about that stuff.  Don't be so caught up in your head.  

Speaker 0: Right, I mean, yeah, in the sense that your whole life, your whole existence is like moving version of that advice.  I don't know.  There's something in you that resists that kind of thinking, and that in itself is just illustrative of who you are.  And there's something to learn from that, I think.  You're clearly not overthinking stuff.  There's a gut thing.  

Speaker 1: Even when I talk about my advice, I'm like, my advice is only relevant to me.  It's not relevant to anybody else.  I'm not saying you should go out if you're the kind of person who overthinks things to stop overthinking things.  It's not bad.  It doesn't work for me.  Maybe it works for you.  

Speaker 0: Let me ask you about love.  I think last time we talked about the meaning of life, and it was kind of about winning.  Of course.  I don't think I've talked to you about love much, whether romantic or just love for the common humanity amongst us all.  What role has love played in your life?  In this quest for winning, where does love fit in?  

Speaker 1: Well, the word love I think means several different things.  There's love in the sense of, maybe I could just say there's like love in the sense of opiates and love in the sense of oxytocin and then love in the sense of maybe like a love for math.  I don't think fits into either of those first two paradigms.  

Speaker 0: So each of those, have they given something to you in your life?  

Speaker 1: I'm not that big of a fan of the first two.  Um...  

Speaker 0: Why?  

Speaker 1: For the same reason I'm not a fan of... You know, for the same reason I don't do opiates and don't take ecstasy.  Right?  And there were times, look, I've tried both.  Um... I liked opiates way more than I liked ecstasy.  Uh, but they're not... the ethical life is the productive life.  So maybe that's my problem with those.  And then like, yeah, a sense of, I don't know, like abstract love for humanity.  I mean, the abstract love for humanity, I'm like, yeah, I've always felt that.  And I guess it's hard for me to imagine not feeling it.  And maybe there's people who don't and I don't know.  

Speaker 0: Yeah, that's just like a background thing that's there.  I mean, since we brought up drugs, let me ask you, this is becoming more and more a part of my life because I'm talking to a few researchers that are working on psychedelics.  I've eaten shrooms a couple of times and it was fascinating to me that like the mind can go, like, It's fascinating the mind can go to places I didn't imagine it could go.  It was very friendly and positive and exciting and everything was kind of hilarious in the place.  Wherever my mind went, that's where I went.  What do you think about psychedelics?  Do you think they have... Where do you think the mind goes?  Have you done psychedelics?  Where do you think the mind goes?  Is there something useful to learn about the places it goes once you come back?  

Speaker 1: You know, I find it interesting that this idea that psychedelics have something to teach is almost unique to psychedelics, right?  People don't argue this about amphetamines.  And I'm not really sure why.  I think all of the drugs have lessons to teach.  I think there's things to learn from opiates.  I think there's things to learn from amphetamines.  I think there's things to learn from psychedelics, things to learn from marijuana.  but also, at the same time, recognize that I don't think you're learning things about the world.  I think you're learning things about yourself.  

Speaker 0: Yes.  

Speaker 1: And, you know, what's the... It might have even been a Timothy Leary quote.  I don't want to misquote him, but the idea is basically like, you know, everybody should look behind the door, but then once you've seen behind the door, you don't need to keep going back.  So, I mean, and that's my thoughts on all real drug use, too.  Except maybe for caffeine.  

Speaker 0: It's a little experience that it's good to have, but.  

Speaker 1: Oh yeah, no, I mean, yeah, I guess, yeah, psychedelics are definitely.  

Speaker 0: So you're a fan of new experiences, I suppose.  Yes.  Because they all contain a little, especially the first few times, it contains some lessons that can be picked up.  

Speaker 1: Yeah, and I'll revisit psychedelics maybe once a year.  Usually smaller doses.  Maybe they turn up the learning rate of your brain.  I've heard that, I like that.  

Speaker 0: Yeah, that's cool.  

Speaker 1: Big learning rates, have pros and cons.  

Speaker 0: Last question, and this is a little weird one, but you've called yourself crazy in the past.  First of all, on a scale of one to ten, how crazy would you say are you?  

Speaker 1: Oh, I mean, it depends how you, you know, when you compare me to Elon Musk and Anthony Lewandowski, not so crazy.  

Speaker 0: So like, like a seven?  

Speaker 1: Let's go with six.  

Speaker 0: Six, six, six.  

Speaker 1: What, uh, I like seven, seven's a good number.  

Speaker 0: Seven, all right, well, I'm sure day by day it changes, right?  But you're in that area.  In thinking about that, what do you think is the role of madness?  Is that a feature or a bug, if you were to dissect your brain?  

Speaker 1: So, okay, from a mental health lens on crazy, I'm not sure I really believe in that.  I'm not sure I really believe in a lot of that stuff.  This concept of, okay, when you get over to hardcore bipolar and schizophrenia, these things are clearly real, somewhat biological.  And then over here on the spectrum, you have ADD and oppositional defiance disorder and these things that are like, Wait, this is normal spectrum.  human behavior, like this isn't, you know, where's the line here and why is this like a problem?  So there's this whole, you know, the neurodiversity of humanity is huge.  Like people think I'm always on drugs.  People are always saying this to me on my streams.  I'm like, guys, you know, like I'm real open with my drug use.  I'd tell you if I was on drugs.  I mean, I had like a cup of coffee this morning, but other than that, this is just me.  

Speaker 0: You're witnessing my brain in action.  So the word madness doesn't even make sense in the rich neurodiversity of humans.  

Speaker 1: I think it makes sense, but only for some insane extremes.  If you are actually visibly hallucinating, that's okay.  

Speaker 0: But there is the kind of spectrum on which you stand out.  That's like if I were to look at decorations on a Christmas tree or something like that, if you were a decoration, that would catch my eye.  That thing is sparkly.  Whatever the hell that thing is.  There's something to that.  Just refusing to be boring, or maybe boring is the wrong word, but to Yeah, I mean, be willing to sparkle.  

Speaker 1: You know, it's like somewhat constructed.  I mean, I am who I choose to be.  I'm going to say things as true as I can see them.  I'm not going to.  I'm not going to.  

Speaker 0: But that's a really important feature in itself.  So like whatever the neurodiversity of your, whatever your brain is, not putting constraints on it that force it to fit into the mold of what society is like, defines what you're supposed to be.  So you're one of the specimens that doesn't mind being yourself.  

Speaker 1: Being right is super important, except at the expense of being wrong.  

Speaker 0: Without breaking that apart, I think it's a beautiful way to end it.  George, you're one of the most special humans I know.  It's truly an honor to talk to you.  Thanks so much for doing it.  

Speaker 1: Thank you for having me.  

Speaker 0: Thanks for listening to this conversation with George Hotz, and thank you to our sponsors, Four Sigmatic, which is the maker of delicious mushroom coffee, Decoding Digital, which is a tech podcast that I listen to and enjoy, and ExpressVPN, which is the VPN I've used for many years.  Please check out these sponsors in the description to get a discount and to support this podcast.  If you enjoy this thing, subscribe on YouTube, review it with Five Stars on Apple Podcasts, follow on Spotify, support on Patreon, or connect with me on Twitter at Lex Friedman.  And now, let me leave you with some words from the great and powerful Linus Torvald.  Talk is cheap, show me the code.  Thank you for listening, and hope to see you next time.  